{"version":3,"sources":["reducers/index.js","reducers/ui.js","constants/ActionTypes.js","reducers/player.js","reducers/playlist.js","store.js","constants/APIConfig.js","api/index.js","actions/player.js","actions/index.js","components/PlaylistComponent.js","components/Progress.js","components/HotCat.js","components/CatListModalItem.js","components/CatListModal.js","containers/Playlist.js","components/PlaylistInfo.js","components/player/AudioIcon.js","components/PlaylistTrack.js","components/PlaylistComment.js","components/PlaylistSubscriber.js","containers/PlaylistDetail.js","containers/Search.js","containers/Toplist.js","containers/TopArtist.js","components/ArtistInfo.js","components/ArtistDesc.js","components/ArtistAlbum.js","components/ArtistMV.js","containers/Artist.js","components/AlbumInfo.js","containers/Album.js","components/player/TrackInfo.js","components/player/Control.js","components/player/Playlist.js","components/player/LyricPanel.js","containers/Player.js","components/Nav.js","components/TopBar.js","components/SearchPanel.js","containers/App.js","serviceWorker.js","index.js"],"names":["history","initialState","drawer","isOpen","modal","search_panel","type","ui","state","arguments","length","undefined","action","Object","objectSpread","audio","playlist","available_playlist","track","playmode","playmodes","paused","current_time","lyric_index","duration","volume","open_playlist","open_lyric","player","filter","st","dt","payload","loading","playlists","comments","categories","tags","subscribers","songs","search","search_hots","search_suggest","toplist","toplist_detail","top_artists","artist","artist_album","artist_mv","artist_desc","artist_simi","album","album_comment","song_url","lyric","forEach","i","privileges","privilege","id","createBrowserHistory","store","createStore","combineReducers","router","connectRouter","compose","applyMiddleware","routerMiddleware","thunk","PLAYLIST_CONFIG","TOP_ARTIST_CONFIG","api_request","axios","create","baseURL","player_get_playlist","dispatch","player_set_play","getState","pause","play","player_set_track","song","data","find","url","console","log","src","replace","get_request","fetch_playlist","limit","order","offset","cat","parsed","queryString","parse","window","location","get","params","api_playlist","then","res","catch","err","fetch_playlist_detail","playlist_id","json","song_ids","trackIds","map","fetch_song_detail","ids","join","fetch_playlist_category","fetch_playlist_hot","fetch_playlist_comment","fetch_playlist_subscriber","api_song_detail","fetch_search","fetch_search_hot","fetch_search_suggest","api_search_suggest","fetch_toplist_detail","fetch_artist","api_artists","hotSongs","fetch_artist_desc","api_artist_desc","fetch_artist_mv","api_artist_mv","fetch_artist_album","api_artist_album","fetch_top_artists","api_top_artists","fetch_album","api_album","fetch_album_comment","api_album_comment","fetch_song_url","api_song_url","t","fetch_lyric","api_lyric","withStyles","theme","root","backgroundColor","boxShadow","card","media","height","marginBottom","spacing","shape","linkText","_ref","classes","react_default","a","createElement","Card","className","clsx","CardActionArea","component","Link","to","concat","CardMedia","image","coverImgUrl","title","name","Typography","variant","display","creator","nickname","justifyContent","margin","CircularProgress","disableShrink","StyledHotCat","flexGrow","toggle_modal","tag","Button","size","color","key","CatListModalItem","category","sub","cat_id","render","index","parseInt","Grid","item","xs","zeroMinWidth","encodeURIComponent","onClick","container","disabled","StyledCatListModal","Dialog","fullWidth","maxWidth","open","aria-labelledby","onClose","DialogTitle","DialogContent","dividers","Container","fixed","keys","components_CatListModalItem","Playlist","this","props","prevProps","push","stringify","_this","_this$props","sm","md","lg","xl","components_PlaylistComponent","justify","alignItems","ChevronRight_default","icon","components_HotCat","lib_default","centerRipple","total","e","handlePaginationClick","components_Progress","components_CatListModal","React","Component","StyledPlaylist","fontSize","connect","toggle","PlaylistInfo","descOpen","_this2","cover","flexContent","gutterBottom","Chip","label","link","CardHeader","cardHeader","avatar","Avatar","alt","avatarUrl","Fragment","dist_default","format","datetime","createTime","clickable","trackCount","playCount","desc","setState","description","trim","react_lines_ellipsis_lib_default","text","maxLine","ellipsis","width","padding","overflow","element","pink","marginLeft","animation","&:first-child","animationPlayState","@keyframes play","0%","transform","100%","defineProperty","style","animationDelay","tableCellHeader","marginRight","tableRowBgColor","palette","grey","disableTextColor","tableRow","&:hover","search_text","no_tracks","tracks","Table","TableHead","TableRow","TableCell","colSpan","TableBody","align","IconButton","player_AudioIcon","PlayCircleOutline_default","PauseCircleOutline_default","ar","k","react_router_dom","reduce","prev","curr","al","reply","primary","main","textDecoration","onPaginationClick","List","comment","ListItem","ListItemAvatar","user","ListItemText","inline","content","secondary","fromNow","locale","time","beReplied","reply_index","secondaryTypographyProps","Divider","pagination","flex","itemText","subscriber","gender","Face_default","signature","primaryTypographyProps","subscribedCount","PlaylistDetail","value","comment_offset","subscriber_offset","handleChange","event","match","onInputChange","evt","target","toLowerCase","indexOf","onCommentPaginationClick","_this$props2","onSubscriberPaginationClick","_this$props3","_this$props4","_this$props5","playlistInfo","player_props","components_PlaylistInfo","tabRoot","Tabs","onChange","indicatorColor","textColor","Tab","commentCount","TextField","placeholder","InputProps","startAdornment","InputAdornment","position","Search_default","searchInput","components_PlaylistTrack","assign","components_PlaylistComment","components_PlaylistSubscriber","StyledPlaylistDetail","borderBottom","& input","Search","tabs","newValue","tab","StyledSearch","Toplist","top4","list","slice","top4_render","topCard","topMedia","coverUrl","dense","first","second","cardRoot","StyledToplist","flexDirection","borderRadius","marginTop","artists","img1v1Url","parmas","textWrapper","textGutterRight","button","alias","& p","buttonGroup","alia","musicSize","albumSize","mvSize","briefDesc","introduction","intro","ti","txt","split","j","albums","hotAlbums","picUrl","publishTime","mvs","mv","imgurl16v9","Artist","album_offset","mv_offset","onAlbumPaginationClick","onMVPaginationClick","pathname","playlistProp","components_ArtistInfo","components_ArtistAlbum","components_ArtistMV","components_ArtistDesc","StyledArtist","company","Album","playlist_props","comment_props","components_AlbumInfo","info","StyledAlbum","shadows","cardMedia","noWrap","track_index","SkipPrevious_default","Math","floor","random","SkipNext_default","zIndex","bottom","right","minWidth","table","maxHeight","minHeight","player_toggle_playlist","Slide","direction","in","mountOnEnter","unmountOnExit","Paper","Clear_default","player_toggle_lyric","lrc","ValueLabelComponent","children","popperRef","useRef","useEffect","current","update","Tooltip","PopperProps","enterTouchDelay","placement","Player","currentTime","onTimeUpdate","player_set_current_time","onEnded","handleSliderChange","audioPlayer","onChangeCommitted","handleVolumeChange","handlerPlaylist","handlerLyric","addEventListener","set_audio","player_get_playmode","AppBar","Toolbar","disableGutters","toolbar","ref","progressRoot","Slider","min","max","step","valueLabelDisplay","player_TrackInfo","player_Control","VolumeUp_default","defaultValue","onVolumeChangeCommitted","Repeat_default","RepeatOne_default","Shuffle_default","QueueMusic_default","textBtn","player_Playlist","player_LyricPanel","StyledPlayer","top","greyColor","left","matches","moment","b","diff","AlbumIcon","path","MusicNoteIcon","QueueMusicIcon","PersonOutlineIcon","GraphicEqIcon","FiberNewIcon","StyledNav","background","paper","iconSize","itemIcon","paddingLeft","listItem","itemTextSmall","toggle_drawer","v","_clsx2","ListItemIcon","StyledTopBar","-webkit-user-select","-webkit-app-region","menu","menuButton","breakpoints","up","actions","textField","input","inputInput","paddingTop","paddingBottom","navigate","toggle_search_panel","remote","edge","aria-label","getCurrentWindow","minimize","Menu_default","goBack","NavigateBefore_default","goForward","NavigateNext_default","onFocus","setTimeout","keywords","sections","Audiotrack_default","PermIdentity_default","Album_default","MusicVideo_default","hot_section","chip","iconRoot","greyText","result","hots","hot","subheader","itemIndex","inset","App","_clsx","esm","CssBaseline","components_TopBar","Drawer","drawerOpen","drawerClose","components_Nav","react_router","exact","TopArtist","containers_Player","ClickAwayListener","onClickAway","components_SearchPanel","flexShrink","whiteSpace","drawerPaper","overflowX","mixins","Boolean","hostname","muiTheme","createMuiTheme","appBar","es","configureStore","ThemeProvider","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.057826af.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\nimport ui from './ui';\nimport player from './player';\nimport playlist from './playlist';\n\nexport default (history) => combineReducers({\n    router: connectRouter(history),\n    player, ui, playlist\n});","import { TOGGLE_DRAWER, TOGGLE_MODAL, TOGGLE_SEARCH_PANEL } from '../constants/ActionTypes';\n\nconst initialState = {\n  drawer: {\n    isOpen: true\n  },\n  modal: {\n    isOpen: false  \n  },\n  search_panel: {\n    isOpen: false,\n    type: 'hot'//hot || suggest\n  }\n};\n\nconst ui = (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_DRAWER:\n      return { ...state, drawer: { isOpen: action.drawer.isOpen } }\n     case TOGGLE_MODAL:\n       return { ...state, modal: { isOpen: action.modal.isOpen } }\n     case TOGGLE_SEARCH_PANEL:\n       return { ...state, search_panel: { isOpen: action.search_panel.isOpen, type: action.search_panel.type || 'hot' } }\n    default:\n      return state;\n  }\n};\n\nexport default ui;\n","//UI相关\nexport const TOGGLE_DRAWER = 'TOGGLE_DRAWER';\nexport const TOGGLE_MODAL = 'TOGGLE_MODAL';\nexport const TOGGLE_SEARCH_PANEL = 'TOGGLE_SEARCH_PANEL';\n\n//Player\nexport const PLAYER_SET_AUDIO = 'PLAYER_SET_AUDIO';\nexport const PLAYER_GET_TRACKS = 'PLAYER_GET_TRACKS';\nexport const PLAYER_SET_PLAY = 'PLAYER_SET_PLAY';\nexport const PLAYER_SET_CURRENT_TIME = 'PLAYER_SET_CURRENT_TIME';\nexport const PLAYER_SET_TRACK = 'PLAYER_SET_TRACK';\nexport const PLAYER_SET_PLAYMODE = 'PLAYER_SET_PLAYMODE';\nexport const PLAYER_OPEN_PLAYLIST = 'PLAYER_OPEN_PLAYLIST';\nexport const PLAYER_OPEN_LYRIC = 'PLAYER_OPEN_LYRIC';\n\n//API相关\nexport const GET_REQUEST = 'GET_REQUEST';\nexport const GET_REQUEST_FAILURE = 'GET_REQUEST_FAILURE';\nexport const FETCH_PLAYLIST = 'FETCH_PLAYLIST';\nexport const FETCH_PLAYLIST_DETAIL = 'FETCH_PLAYLIST_DETAIL';\nexport const FETCH_PLAYLIST_CATEGORY = 'FETCH_PLAYLIST_CATEGORY';\nexport const FETCH_PLAYLIST_HOT = 'FETCH_PLAYLIST_HOT';\nexport const FETCH_PLAYLIST_COMMENT = 'FETCH_PLAYLIST_COMMENT';\nexport const FETCH_PLAYLIST_SUBSCRIBER = 'FETCH_PLAYLIST_SUBSCRIBER';\nexport const FETCH_SONG_DETAIL = 'FETCH_SONG_DETAIL';\nexport const FETCH_SEARCH = 'FETCH_SEARCH';\nexport const FETCH_SEARCH_HOT = 'FETCH_SEARCH_HOT';\nexport const FETCH_SEARCH_SUGGEST = 'FETCH_SEARCH_SUGGEST';\nexport const FETCH_TOPLIST = 'FETCH_TOPLIST';\nexport const FETCH_TOPLIST_DETAIL = 'FETCH_TOPLIST_DETAIL';\nexport const FETCH_ARTIST = 'FETCH_ARTIST';\nexport const FETCH_TOP_ARTIST = 'FETCH_TOP_ARTIST';\nexport const FETCH_TOP_ARTIST_MORE = 'FETCH_TOP_ARTIST_MORE';\nexport const FETCH_ARTIST_ALBUM = 'FETCH_ARTIST_ALBUM';\nexport const FETCH_ARTIST_MV = 'FETCH_ARTIST_MV';\nexport const FETCH_ARTIST_DESC = 'FETCH_ARTIST_DESC';\nexport const FETCH_ARTIST_SIMI = 'FETCH_ARTIST_SIMI';\nexport const FETCH_ALBUM = 'FETCH_ALBUM';\nexport const FETCH_ALBUM_COMMENT = 'FETCH_ALBUM_COMMENT';\nexport const FETCH_SONG_URL = 'FETCH_SONG_URL';\nexport const FETCH_LYRIC = 'FETCH_LYRIC';\n","import { \n  PLAYER_SET_AUDIO,     \n  PLAYER_GET_TRACKS,  \n  PLAYER_SET_CURRENT_TIME,\n  PLAYER_SET_PLAY,\n  PLAYER_SET_TRACK,\n  PLAYER_SET_PLAYMODE,\n  PLAYER_OPEN_PLAYLIST,\n  PLAYER_OPEN_LYRIC,\n} from '../constants/ActionTypes'\n\nconst initialState = {\n  audio: null,\n  playlist: [],  \n  available_playlist: [],\n  track: null,  \n  playmode: 0,\n  playmodes: [0,1,2],//0: repeat, 1: repeat_one, 2: shuffle\n  paused: true,\n  current_time: 0,\n  lyric_index: -1,\n  duration: 0,\n  volume: 0,  \n  open_playlist: false,\n  open_lyric: false\n}\n\n\nconst player = (state = initialState, action) => {    \n  switch (action.type) {\n    case PLAYER_SET_AUDIO:\n      const { audio } = action\n      return { ...state, audio }    \n    case PLAYER_GET_TRACKS:\n      const { playlist } = action;      \n      const available_playlist = playlist.filter( track => track.st === 0 );\n      return {...state, \n        playlist: playlist, \n        available_playlist: available_playlist \n      }      \n    case PLAYER_SET_TRACK:      \n      return { ...state, \n        track: action.track || null,         \n        current_time: 0, \n        duration: action.track ? action.track.dt/1000 : 0, \n        paused: action.paused !== undefined ? action.paused : true \n      }\n    case PLAYER_SET_PLAY:\n      return { ...state, paused: action.paused !== undefined ? action.paused : true }\n    case PLAYER_SET_CURRENT_TIME:\n      return { ...state, current_time: action.current_time, lyric_index: action.lyric_index }\n    case PLAYER_SET_PLAYMODE:\n      return { ...state, playmode: action.playmode}\n    case PLAYER_OPEN_PLAYLIST:\n      return { ...state, open_playlist: action.open_playlist}\n    case PLAYER_OPEN_LYRIC:\n      return { ...state, open_lyric: action.open_lyric}\n    default:\n      return state\n  }\n}\n\nexport default player\n","import {\n  GET_REQUEST,\n  GET_REQUEST_FAILURE,\n  FETCH_PLAYLIST,\n  FETCH_PLAYLIST_DETAIL,\n  FETCH_PLAYLIST_COMMENT,\n  FETCH_PLAYLIST_CATEGORY,\n  FETCH_PLAYLIST_HOT,\n  FETCH_PLAYLIST_SUBSCRIBER,\n  FETCH_SONG_DETAIL,\n  FETCH_SEARCH,\n  FETCH_SEARCH_HOT,\n  FETCH_SEARCH_SUGGEST,\n  FETCH_TOPLIST,\n  FETCH_TOPLIST_DETAIL,\n  FETCH_TOP_ARTIST,\n  // FETCH_TOP_ARTIST_MORE,\n  FETCH_ARTIST,\n  FETCH_ARTIST_ALBUM,\n  FETCH_ARTIST_MV,\n  FETCH_ARTIST_DESC,\n  FETCH_ARTIST_SIMI,\n  FETCH_ALBUM,\n  FETCH_ALBUM_COMMENT,\n  FETCH_SONG_URL,\n  FETCH_LYRIC,\n} from '../constants/ActionTypes';\n\nconst payload = {\n  loading: true,\n  payload: {}\n}\n\nconst initialState = {\n  playlists: payload,\n  playlist: payload,\n  comments: payload,\n  categories: payload,\n  tags: payload,\n  subscribers: payload,\n  songs: payload,\n  search: payload,\n  search_hots: payload,\n  search_suggest: payload,\n  toplist: payload,\n  toplist_detail: payload,\n  top_artists: payload,\n  artist: payload,\n  artist_album: payload,\n  artist_mv: payload,\n  artist_desc: payload,\n  artist_simi: payload,\n  album: payload,\n  album_comment: payload,\n  song_url: payload,\n  lyric: payload\n};\n\nconst playlist = (state = initialState, action) => {  \n  switch (action.type) {\n    case GET_REQUEST:\n      const { \n        playlists, tags, categories, \n        playlist, comments,subscribers, \n        songs, search, search_hots, \n        search_suggest, toplist, \n        toplist_detail, top_artists, \n        artist, artist_album, artist_mv, artist_desc, artist_simi,\n        album, album_comment,\n        song_url, lyric\n      } = action\n      if(playlists) {\n        return { ...state, playlists };\n      } else if(tags) {\n        return { ...state, tags };\n      } else if(categories) {\n        return { ...state, categories };\n      } else if(playlist) {\n        return { ...state, playlist };\n      } else if(comments) {\n        return { ...state, comments };\n      } else if(subscribers) {\n        return { ...state, subscribers };\n      } else if(songs) {\n        return { ...state, songs };\n      } else if(search) {\n        return { ...state, search };\n      } else if(search_hots) {\n        return { ...state, search_hots };\n      } else if(search_suggest) {\n        return { ...state, search_suggest };\n      } else if(toplist) {\n        return { ...state, toplist };\n      } else if(toplist_detail) {\n        return { ...state, toplist_detail };\n      } else if(top_artists) {\n        return { ...state, top_artists };\n      } else if(artist) {\n        return { ...state, artist };\n      } else if(artist_album) {\n        return { ...state, artist_album };\n      } else if(artist_mv) {\n        return { ...state, artist_mv };\n      } else if(artist_desc) {\n        return { ...state, artist_desc };\n      } else if(artist_simi) {\n        return { ...state, artist_simi };\n      } else if(album) {\n        return { ...state, album };\n      } else if(album_comment) {\n        return { ...state, album_comment };\n      }  else if(song_url) {\n        return { ...state, song_url };\n      }  else if(lyric) {\n        return { ...state, lyric };\n      } else {\n        return { ...state };\n      }\n\n    case GET_REQUEST_FAILURE:\n      return { ...state };\n    case FETCH_PLAYLIST:\n      return { ...state,\n        playlists: {\n          loading: false,\n          payload: action.playlists.payload\n        }\n      }\n    case FETCH_PLAYLIST_HOT:\n      return { ...state,\n        tags: {\n          loading: false,\n          payload: action.tags.payload\n        }\n      }\n    case FETCH_PLAYLIST_CATEGORY:\n      return { ...state,\n        categories: {\n          loading: false,\n          payload: action.categories.payload\n        }\n      }\n    case FETCH_PLAYLIST_DETAIL:\n      return { ...state,\n        playlist: {\n          loading: false,\n          payload: action.playlist.payload\n        }\n      }\n    case FETCH_PLAYLIST_COMMENT:\n      return { ...state,\n        comments: {\n          loading: false,\n          payload: action.comments.payload\n        }\n      }\n    case FETCH_PLAYLIST_SUBSCRIBER:\n      return { ...state,\n        subscribers: {\n          loading: false,\n          payload: action.subscribers.payload\n        }\n      }\n    case FETCH_SONG_DETAIL:\n      action.songs.payload.songs.forEach( (track, i) => {        \n        action.songs.payload.privileges.forEach( privilege => {          \n          if(privilege.id === track.id) {            \n            track.st = privilege.st;\n          }          \n      })})\n      return { ...state,\n        songs: {\n          loading: false,\n          payload: action.songs.payload\n        }\n      }\n    case FETCH_SEARCH:\n      return { ...state,\n        search: {\n          loading: false,\n          payload: action.search.payload\n        }\n      }\n    case FETCH_SEARCH_HOT:\n      return { ...state,\n        search_hots: {\n          loading: false,\n          payload: action.search_hots.payload\n        }\n      }\n    case FETCH_SEARCH_SUGGEST:\n      return { ...state,\n        search_suggest: {\n          loading: false,\n          payload: action.search_suggest.payload\n        }\n      }\n    case FETCH_TOPLIST:\n      return { ...state,\n        toplist: {\n          loading: false,\n          payload: action.toplist.payload\n        }\n      }\n    case FETCH_TOPLIST_DETAIL:\n      return { ...state,\n        toplist_detail: {\n          loading: false,\n          payload: action.toplist_detail.payload\n        }\n      }\n    case FETCH_TOP_ARTIST:\n      return { ...state,\n        top_artists: {\n          loading: false,\n          payload: action.top_artists.payload\n        }\n      }\n    case FETCH_ARTIST:\n      return { ...state,\n        artist: {\n          loading: false,\n          payload: action.artist.payload\n        }\n      }\n    case FETCH_ARTIST_ALBUM:\n      return { ...state,\n        artist_album: {\n          loading: false,\n          payload: action.artist_album.payload\n        }\n      }\n    case FETCH_ARTIST_MV:\n      return { ...state,\n        artist_mv: {\n          loading: false,\n          payload: action.artist_mv.payload\n        }\n      }\n    case FETCH_ARTIST_DESC:\n      return { ...state,\n        artist_desc: {\n          loading: false,\n          payload: action.artist_desc.payload\n        }\n      }\n    case FETCH_ARTIST_SIMI:\n      return { ...state,\n        artist_simi: {\n          loading: false,\n          payload: action.artist_simi.payload\n        }\n      }\n    case FETCH_ALBUM:\n      return { ...state,\n        album: {\n          loading: false,\n          payload: action.album.payload\n        }\n      }\n    case FETCH_ALBUM_COMMENT:\n      return { ...state,\n        album_comment: {\n          loading: false,\n          payload: action.album_comment.payload\n        }\n      }\n    case FETCH_SONG_URL:\n      return { ...state,\n        song_url: {\n          loading: false,\n          payload: action.song_url.payload\n        }\n      }\n    case FETCH_LYRIC:\n      return { ...state, \n        lyric: {\n          loading: false,\n          payload: action.lyric.payload\n        }\n      }\n    //TODO\n    // case FETCH_TOP_ARTIST_MORE:\n    //   return { ...state,\n    //     top_artists: {\n    //       loading: false,\n    //       payload: action.top_artists.payload\n    //     }\n    //   }\n    default:\n      return state;\n  }\n};\n\nexport default playlist;\n","import { createBrowserHistory } from 'history';\nimport { applyMiddleware, compose, createStore  } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport createRootReducer from './reducers';\n\nexport const history = createBrowserHistory()\n\nconst store = createStore(\n  createRootReducer(history), // root reducer with router state\n  compose(\n    applyMiddleware(\n      routerMiddleware(history), // for dispatching history actions\n      thunk\n    ),\n  ),\n);\n\nexport default store;","export const API_HOST = 'https://netease-cloud-music-api-orcin-phi.vercel.app/'\nexport const PLAYLIST_CONFIG = {\n  limit: 60,\n  order: 'hot'\n}\nexport const TOP_ARTIST_CONFIG = {\n  limit: 60\n}\nexport const SEARCH_TYPES = {\n  SONG: 1,\n  ALBUM: 10,\n  AR: 100,\n  PLAYLIST: 1000,\n  USER: 1002,\n  MV: 1004,//not used\n  LR: 1006,\n  RADIO: 1009,\n  VIDEO: 1014\n}\n","import axios from 'axios';\nimport queryString from 'query-string';\nimport { API_HOST, PLAYLIST_CONFIG, TOP_ARTIST_CONFIG } from '../constants/APIConfig';\n\nconst api_request = axios.create({\n  baseURL: API_HOST\n});\n\n/**\n * 歌单 ( 网友精选碟 )\n * @param limit\n * @param order 可选值为'new'和'hot',默认为'hot'\n * @param offset (page-1)*limit\n * @param cat 比如'华语','古风','欧美','流行',默认为'全部'\n */\nexport const api_playlist = (params = {\n    limit: PLAYLIST_CONFIG.limit,\n    order: PLAYLIST_CONFIG.order,\n    offset: 0\n}) => {\n  var parsed = queryString.parse(window.location.search);\n  parsed.limit = parsed.limit === undefined ? PLAYLIST_CONFIG.limit : parsed.limit;\n  parsed.offset = parsed.offset === undefined ? 0 : parsed.offset;\n  parsed.order = parsed.order === undefined ? PLAYLIST_CONFIG.order : parsed.order;\n  return api_request.get('/top/playlist/', {\n    params: parsed\n  })\n}\n\n/**\n * 获取歌单详情\n * @param id\n */\nexport const api_playlist_detail = (params) => api_request.get(`/playlist/detail`, {\n    params: params\n})\n\n/**\n * 获取歌单分类\n */\nexport const api_playlist_catlist = () => api_request.get(`/playlist/catlist`)\n\n/**\n * 获取热门分类\n */\nexport const api_playlist_hot = () => api_request.get(`/playlist/hot`)\n\n/**\n * 歌单评论\n * @param id\n * @param limit\n * @param offset\n */\nexport const api_playlist_comment = (params) => api_request.get(`/comment/playlist`, { params: params })\n\n/**\n * 歌单收藏者\n * @param id, required\n * @param limit, optional, default 20\n * @param offset, optional, (page-1)*limit\n */\nexport const api_playlist_subscriber = (params) => api_request.get(`/playlist/subscribers`, { params: params });\n\n/**\n * 获取歌曲详情\n * @param ids eg: ids=1,2,3\n */\nexport const api_song_detail = (params) => api_request.get(`/song/detail`, { params: params });\n\n/**\n * 搜索\n * @param keywords\n * @param limit\n * @param type 搜索类型；取值意义 : 1: 单曲, 10: 专辑, 100: 歌手, 1000: 歌单, 1002: 用户, 1004: MV, 1006: 歌词, 1009: 电台, 1014: 视频\n */\nexport const api_search = (params) => api_request.get(`/search`, { params: params });\n\n/**\n * 热搜\n */\nexport const api_search_hot = () => api_request.get(`/search/hot`);\n\n/**\n * 搜索建议\n * @param keywords\n */\nexport const api_search_suggest = (params) => api_request.get(`/search/suggest`, { params: params });\n\n/**\n * 所有榜单\n */\nexport const api_toplist = () => api_request.get(`/toplist`);\n\n/**\n * 榜单内容摘要\n */\nexport const api_toplist_detail = () => api_request.get(`/toplist/detail`);\n\n/**\n * 热门歌手\n * @param limit\n * @param offset\n */\nexport const api_top_artists = ( params = {\n    limit: TOP_ARTIST_CONFIG.limit,\n    offset: 0\n} ) => api_request.get(`/top/artists`, { params: params });\n\n/**\n * 歌手单曲\n * @param id\n */\nexport const api_artists = ( params  ) => api_request.get(`/artists`, { params: params });\n\n/**\n * 歌手专辑\n * @param id\n * @param limit\n * @param offset\n */\nexport const api_artist_album = ( params = {\n    limit: TOP_ARTIST_CONFIG.limit,\n    offset: 0\n} ) => api_request.get(`/artist/album`, { params: params });\n\n/**\n * 歌手MV\n * @param id\n */\nexport const api_artist_mv = ( params ) => api_request.get(`/artist/mv`, { params: params });\n\n/**\n * 歌手描述\n * @param id\n */\nexport const api_artist_desc = ( params ) => api_request.get(`/artist/desc`, { params: params });\n\n/**\n * 相似歌手\n * @param id\n */\nexport const api_artist_simi = ( params ) => api_request.get(`/artist/simi`, { params: params });\n\n/**\n * 专辑内容\n * @param id\n */\nexport const api_album = ( params ) => api_request.get(`/album`, { params: params });\n\n/**\n * 专辑评论\n * @param id\n */\nexport const api_album_comment = ( params ) => api_request.get(`/comment/album`, { params: params });\n\n/**\n * 音乐url\n * @param id\n */\nexport const api_song_url = ( params ) => api_request.get(`/song/url`, { params: params });\n\n/**\n * 歌词\n * @param id\n */\nexport const api_lyric = ( params ) => api_request.get(`/lyric`, { params: params });\n\n","import {\n  PLAYER_SET_AUDIO,\n  PLAYER_GET_TRACKS,\n  PLAYER_SET_TRACK,\n  PLAYER_SET_PLAY,\n  PLAYER_SET_CURRENT_TIME,\n  PLAYER_SET_PLAYMODE,\n  PLAYER_OPEN_PLAYLIST,\n  PLAYER_OPEN_LYRIC,\n} from '../constants/ActionTypes';\n\nimport moment from 'moment';\n\nexport const set_audio = (audio) => dispatch => {\n  dispatch({\n    type: PLAYER_SET_AUDIO,\n    audio\n  })\n}\n\nexport const player_get_playlist = (playlist) => dispatch => {\n  dispatch({\n    type: PLAYER_GET_TRACKS,\n    playlist: playlist\n  })\n}\n\nexport const player_set_play = (paused) => (dispatch, getState) => {\n\n  const state = getState();\n  const audio = state.player.audio;\n  if(paused) {\n    audio.pause()\n  } else {\n    audio.play()\n  }\n  dispatch({\n    type: PLAYER_SET_PLAY,\n    paused: paused\n  })\n}\n\nexport const player_set_track = (track, paused) => (dispatch, getState) => {\n  const state = getState();\n  const audio = state.player.audio;\n  if (state.playlist.song_url.payload) {\n    var song = state.playlist.song_url.payload.data.find( song => song.id === track.id );\n    if(song.url) {\n      console.log(\"===>\", song.url);\n      audio.src = song.url.replace(\"m10.\",\"m10c.\");\n      audio.play();\n    }\n  }\n\n  dispatch({\n    type: PLAYER_SET_TRACK,\n    track: track,\n    paused: audio.paused\n  })\n}\n\nexport const player_set_current_time = (current_time) => (dispatch, getState) => {\n  const state = getState();\n  const lyric = state.playlist.lyric;\n  let lyric_index = -1;\n  let matches = []\n  if(lyric.payload.lrc) {\n    matches = lyric.payload.lrc.lyric.match(/(?<=\\[)(.\\d):(.+?\\d)(?=\\])/g);\n    lyric_index = matches.filter( (txt, j) => {\n      let a = moment(txt,'mm:ss.SSS')\n      let b = moment(current_time*1000).format('mm:ss.SSS');\n      let c = moment(b,'mm:ss.SSS');\n      return c.diff(a) >= 0\n    });\n  }\n\n  dispatch({\n      type: PLAYER_SET_CURRENT_TIME,\n      current_time: current_time,\n      lyric_index: matches[matches.indexOf(lyric_index[lyric_index.length-1])]\n  })\n}\n\nexport const player_get_playmode = () => (dispatch, getState) => {\n  const player = getState().player;\n  const playmodes = player.playmodes;\n  const current_playmode = player.playmode;\n  dispatch({\n    type: PLAYER_SET_PLAYMODE,\n    playmode: playmodes[(current_playmode+1)%playmodes.length]\n  })\n}\n\nexport const player_toggle_playlist = (toggle) => (dispatch) => {\n  dispatch({\n    type: PLAYER_OPEN_PLAYLIST,\n    open_playlist: toggle\n  })\n}\n\nexport const player_toggle_lyric = (toggle) => (dispatch) => {\n  dispatch({\n    type: PLAYER_OPEN_LYRIC,\n    open_lyric: toggle\n  })\n}\n","import {\n  TOGGLE_DRAWER,\n  TOGGLE_MODAL,\n  TOGGLE_SEARCH_PANEL,\n  GET_REQUEST,\n  FETCH_PLAYLIST,\n  FETCH_PLAYLIST_DETAIL,\n  FETCH_PLAYLIST_CATEGORY,\n  FETCH_PLAYLIST_HOT,\n  FETCH_PLAYLIST_COMMENT,\n  FETCH_PLAYLIST_SUBSCRIBER,\n  FETCH_SONG_DETAIL,\n  FETCH_SEARCH,\n  FETCH_SEARCH_HOT, \n  FETCH_SEARCH_SUGGEST, \n  FETCH_TOPLIST, \n  FETCH_TOPLIST_DETAIL, \n  FETCH_TOP_ARTIST, \n  FETCH_ARTIST, \n  FETCH_ARTIST_ALBUM, \n  FETCH_ARTIST_MV, \n  FETCH_ARTIST_DESC, \n  FETCH_ARTIST_SIMI, \n  FETCH_ALBUM, \n  FETCH_ALBUM_COMMENT, \n  FETCH_SONG_URL,\n  FETCH_LYRIC,\n} from '../constants/ActionTypes';\n\nimport {\n  api_playlist,\n  api_playlist_detail,\n  api_playlist_catlist,\n  api_playlist_hot,\n  api_playlist_comment,\n  api_playlist_subscriber,\n  api_song_detail,\n  api_search,\n  api_search_hot,\n  api_search_suggest,\n  api_toplist,\n  api_toplist_detail,\n  api_top_artists,\n  api_artists,\n  api_artist_album,\n  api_artist_mv,\n  api_artist_desc,\n  api_artist_simi,\n  api_album,\n  api_album_comment,\n  api_song_url,\n  api_lyric,\n} from '../api';\nimport { PLAYLIST_CONFIG } from '../constants/APIConfig';\n\nimport { player_set_track } from './player';\n\nexport const toggle_drawer = (toggle) => dispatch => {\n  dispatch({\n    type: TOGGLE_DRAWER, \n    drawer: {\n      isOpen: toggle\n    }\n  })\n}\n\nexport const toggle_modal = (toggle) => dispatch => {\n  dispatch({\n    type: TOGGLE_MODAL,    \n    modal: {\n      isOpen: toggle\n    }\n  })\n}\n\nexport const toggle_search_panel = (toggle, type = 'hot') => dispatch => {\n  dispatch({\n    type: TOGGLE_SEARCH_PANEL,\n    search_panel: {\n      isOpen: toggle,\n      type: type\n    }\n  })\n}\n\n\n\nconst get_request = (payload) => {\n  return { type: GET_REQUEST, ...payload}\n}\n\n\nexport const fetch_playlist = (limit = PLAYLIST_CONFIG.limit, order = PLAYLIST_CONFIG.order, offset = 0, cat = '') => dispatch => {\n  dispatch(get_request({\n    playlists: {\n      loading: true,\n      payload: {}\n    }\n  }));\n  api_playlist( limit, order, offset, cat).then(res => {\n    dispatch({\n      type: FETCH_PLAYLIST,\n      playlists: {\n        payload: res.data\n      }\n    })\n  }).catch(err=> {\n\n  })\n}\n\nexport const fetch_playlist_detail = (playlist_id) => (dispatch) => {\n  dispatch(get_request({\n    playlist: {\n      loading: true,\n      payload: {}\n    }\n  }));\n  api_playlist_detail(playlist_id)\n    .then(res => {\n      dispatch({\n        type: FETCH_PLAYLIST_DETAIL,\n        playlist: {\n          payload: res.data\n        }\n      });\n      return res.data;\n    })\n    .then(json => {\n      var song_ids = json.playlist.trackIds.map( (track) => { return track.id; })\n      dispatch(fetch_song_detail({ids: song_ids.join(\",\")}));\n      // dispatch(fetch_song_url({id: song_ids.join(\",\")}));\n    })    \n    .catch(err=> {\n\n    })\n}\n\nexport const fetch_playlist_category = () => dispatch => {\n  dispatch(get_request({\n    categories: {\n      loading: true,\n      payload: {}\n    }\n  }));\n\n  api_playlist_catlist().then(res => {\n    dispatch({\n      type: FETCH_PLAYLIST_CATEGORY,\n      categories: {\n        payload: res.data\n      }\n    })\n  }).catch(err=> {\n\n  })\n}\n\nexport const fetch_playlist_hot = () => dispatch => {\n  dispatch(get_request({\n    tags: {\n      loading: true,\n      payload: {}\n    }\n  }));\n  api_playlist_hot().then(res => {\n    dispatch({\n      type: FETCH_PLAYLIST_HOT,\n      tags: {\n        payload: res.data\n      }\n    });\n  }).catch(err=> {\n  })\n}\n\nexport const fetch_playlist_comment = (playlist_id) => dispatch => {\n  dispatch(get_request({\n    comments: {\n      loading: true,\n      payload: {}\n    }\n  }));\n\n  api_playlist_comment(playlist_id).then(res => {\n    dispatch({\n      type: FETCH_PLAYLIST_COMMENT,\n      comments: {\n        payload: res.data\n      }\n    })\n  }).catch(err=> {\n\n  })\n}\n\nexport const fetch_playlist_subscriber = (playlist_id) => dispatch => {\n  dispatch(get_request({\n    subscribers: {\n      loading: true,\n      payload: {}\n    }\n  }));\n\n  api_playlist_subscriber(playlist_id).then(res => {\n    dispatch({\n      type: FETCH_PLAYLIST_SUBSCRIBER,\n      subscribers: {\n        payload: res.data\n      }\n    })\n  }).catch(err=> {\n\n  })\n}\n\nexport const fetch_song_detail = (params) => (dispatch) => {\n  dispatch(get_request({\n    songs: {\n      loading: true,\n      payload: {}\n    }\n  }));\n\n  dispatch(get_request({\n    song_url: {\n      loading: true,\n      payload: {}\n    }\n  }));\n\n  api_song_detail(params).then(res => {\n    dispatch({\n      type: FETCH_SONG_DETAIL,\n      songs: {\n        payload: res.data\n      }\n    });\n    return res.data;\n  })\n  .then(json => {\n    // var song_ids = json.songs.map( (track) => { return track.id; })\n    // dispatch(fetch_song_url({id: song_ids.join(\",\")}));\n  })  \n  .catch(err=> {\n\n  })\n}\n\nexport const fetch_search = () => (dispatch) => {\n  dispatch(get_request({\n    search: {\n      loading: true,\n      payload: {}\n    }\n  }));\n\n  api_search().then(res => {\n    dispatch({\n      type: FETCH_SEARCH,\n      search: {\n        payload: res.data\n      }\n    })\n  }).catch(err=> {\n\n  })\n}\n\nexport const fetch_search_hot = () => (dispatch) => {\n  dispatch(get_request({\n    search_hots: {\n      loading: true,\n      payload: {}\n    }\n  }));\n\n  api_search_hot().then(res => {\n    dispatch({\n      type: FETCH_SEARCH_HOT,\n      search_hots: {\n        payload: res.data\n      }\n    })\n  }).catch(err=> {\n\n  })\n}\n\nexport const fetch_search_suggest = (params) => (dispatch) => {\n  dispatch(get_request({\n    search_suggest: {\n      loading: true,\n      payload: {}\n    }\n  }));\n\n  api_search_suggest(params).then(res => {\n    dispatch({\n      type: FETCH_SEARCH_SUGGEST,\n      search_suggest: {\n        payload: res.data\n      }\n    })\n  }).catch(err=> {\n\n  })\n}\n\nexport const fetch_toplist = () => (dispatch) => {\n  dispatch(get_request({\n    toplist: {\n      loading: true,\n      payload: {}\n    }\n  }));\n\n  api_toplist().then(res => {\n    dispatch({\n      type: FETCH_TOPLIST,\n      toplist: {\n        payload: res.data\n      }\n    })\n  }).catch(err=> {\n\n  })\n}\n\nexport const fetch_toplist_detail = () => (dispatch) => {\n  dispatch(get_request({\n    toplist_detail: {\n      loading: true,\n      payload: {}\n    }\n  }));\n\n  api_toplist_detail().then(res => {\n    dispatch({\n      type: FETCH_TOPLIST_DETAIL,\n      toplist_detail: {\n        payload: res.data\n      }\n    })\n  }).catch(err=> {\n\n  })\n}\n\nexport const fetch_artist = (params) => (dispatch) => {\n  dispatch(get_request({\n    artist: {\n      loading: true,\n      payload: {}\n    }\n  }));\n\n  dispatch(get_request({\n    song_url: {\n      loading: true,\n      payload: {}\n    }\n  }));\n\n  api_artists(params).then(res => {\n    dispatch({\n      type: FETCH_ARTIST,\n      artist: {\n        payload: res.data\n      }\n    });\n    return res.data;\n  })\n  .then(json => {    \n      var song_ids = json.hotSongs.map( (song) => { return song.id; })      \n      dispatch(fetch_song_detail({ids: song_ids.join(\",\")}));\n    })    \n  .catch(err=> {\n\n  })\n}\n\nexport const fetch_artist_desc = (params) => (dispatch) => {\n  dispatch(get_request({\n    artist_desc: {\n      loading: true,\n      payload: {}\n    }\n  }));\n\n  api_artist_desc(params).then(res => {\n    dispatch({\n      type: FETCH_ARTIST_DESC,\n      artist_desc: {\n        payload: res.data\n      }\n    })\n  }).catch(err=> {\n\n  })\n}\n\nexport const fetch_artist_mv = (params) => (dispatch) => {\n  dispatch(get_request({\n    artist_mv: {\n      loading: true,\n      payload: {}\n    }\n  }));\n\n  api_artist_mv(params).then(res => {\n    dispatch({\n      type: FETCH_ARTIST_MV,\n      artist_mv: {\n        payload: res.data\n      }\n    })\n  }).catch(err=> {\n\n  })\n}\n\nexport const fetch_artist_album = (params) => (dispatch) => {\n  dispatch(get_request({\n    artist_album: {\n      loading: true,\n      payload: {}\n    }\n  }));\n\n  api_artist_album(params).then(res => {\n    dispatch({\n      type: FETCH_ARTIST_ALBUM,\n      artist_album: {\n        payload: res.data\n      }\n    })\n  }).catch(err=> {\n\n  })\n}\n\nexport const fetch_artist_simi = (params) => (dispatch) => {\n  dispatch(get_request({\n    artist_simi: {\n      loading: true,\n      payload: {}\n    }\n  }));\n\n  api_artist_simi(params).then(res => {\n    dispatch({\n      type: FETCH_ARTIST_SIMI,\n      artist_simi: {\n        payload: res.data\n      }\n    })\n  }).catch(err=> {\n\n  })\n}\n\nexport const fetch_top_artists = (params, type=FETCH_TOP_ARTIST) => (dispatch) => {\n  dispatch(get_request({\n    top_artists: {\n      loading: true,\n      payload: {}\n    }\n  }));\n\n  api_top_artists(params).then(res => {\n    dispatch({\n      type: type,\n      top_artists: {\n        payload: res.data\n      }\n    })\n  }).catch(err=> {\n\n  })\n}\n\nexport const fetch_album = (params) => (dispatch) => {\n  dispatch(get_request({\n    album: {\n      loading: true,\n      payload: {}\n    }\n  }));\n\n\n  dispatch(get_request({\n    song_url: {\n      loading: true,\n      payload: {}\n    }\n  }));  \n\n  api_album(params).then(res => {\n    dispatch({\n      type: FETCH_ALBUM,\n      album: {\n        payload: res.data\n      }\n    })\n    return res.data\n  })\n  .then(json => {\n    var song_ids = json.songs.map( (track) => { return track.id; })\n    dispatch(fetch_song_detail({ids: song_ids.join(\",\")}));\n  })    \n  .catch(err=> {\n\n  })\n}\n\nexport const fetch_album_comment = (params) => (dispatch) => {\n  dispatch(get_request({\n    album_comment: {\n      loading: true,\n      payload: {}\n    }\n  }));\n\n  api_album_comment(params).then(res => {\n    dispatch({\n      type: FETCH_ALBUM_COMMENT,\n      album_comment: {\n        payload: res.data\n      }\n    })\n  }).catch(err=> {\n\n  })\n}\n\nexport const fetch_song_url = (params) => (dispatch, getState) => {\n  dispatch(get_request({\n    song_url: {\n      loading: true,\n      payload: {}\n    }\n  }));\n\n  const state = getState();\n\n  api_song_url(params).then(res => {\n    var track = state.player.playlist.find( t => {      \n        return t.id === params.id      \n    })\n    console.log(track)\n    \n    dispatch({\n      type: FETCH_SONG_URL,\n      song_url: {\n        payload: res.data\n      }\n    });\n    dispatch(fetch_lyric({id: track.id}))  \n    dispatch(player_set_track(track, false));      \n  }).catch(err=> {\n\n  })\n}\n\nexport const fetch_lyric = (params) => (dispatch) => {\n  dispatch(get_request({\n    lyric: {\n      loading: true,\n      payload: {}\n    }\n  }));\n\n  api_lyric(params).then(res => {\n    dispatch({\n      type: FETCH_LYRIC,\n      lyric: {\n        payload: res.data\n      }\n    })\n  }).catch(err=> {\n\n  })\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme) => ({\n  root: {\n    backgroundColor: 'transparent',\n    boxShadow: 'none'\n  },\n  card: {    \n  },\n  media: {    \n    height:'100%',      \n    marginBottom: theme.spacing(1),\n    ...theme.shape\n  },\n  linkText: {\n    ...theme.linkText,    \n  }\n});\n\nconst PlaylistComponent = ({ classes, playlist }) => {\n  return (\n    <Card className={clsx(classes.card, classes.root)} >\n      <CardActionArea component={Link} to={`/playlist/${playlist.id}`}>\n          <CardMedia\n            className={classes.media}\n            image={playlist.coverImgUrl}\n            title={playlist.name}\n            component=\"img\"\n          />\n      </CardActionArea>\n      <CardActionArea className={classes.linkText} component={Link} to={`/playlist/${playlist.id}`}>\n        <Typography  variant=\"subtitle2\" display=\"block\">\n          {playlist.name}\n        </Typography>\n        <Typography variant=\"caption\" display=\"block\">\n          by {playlist.creator.nickname}\n        </Typography>\n      </CardActionArea>\n    </Card>\n  );\n}\nexport default withStyles(styles)(PlaylistComponent);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    margin: theme.spacing(3)\n  }\n});\n\nconst Progress = ({classes}) => {\n  return <div className={classes.root}><CircularProgress disableShrink/></div>\n}\n\nexport default withStyles(styles)(Progress);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  }\n});\n\n/**\n * @class HotCat\n * @extends {Component}\n */\nconst HotCat = ( {classes, playlist, toggle_modal, location } ) => {\n  let tags = playlist.tags.payload.tags;\n  return (        \n    playlist.tags.loading ? '加载中...' :\n      tags && tags.map( (tag,i) => <Button size=\"small\" component={Link} to={`/?cat=${tag.name}`} color={location.cat === tag.name ? 'primary' : 'default'} key={tag.id}>{tag.name}</Button>)\n  );\n}\n\nHotCat.propTypes = {\n  playlist: PropTypes.object.isRequired\n}\n\nconst StyledHotCat = withStyles(styles)(HotCat);\nexport default (StyledHotCat)","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nconst CatListModalItem = ({ category, sub, cat_id, toggle_modal}) => {\n  let render = sub.map( (cat, index) => {\n    return cat.category === parseInt(cat_id) && <Grid item key={\"cat-\"+cat.name} xs={2} zeroMinWidth>\n      <Button size=\"small\" component={Link} to={`/?cat=${encodeURIComponent(cat.name)}`} onClick={ () => toggle_modal(false) }>\n      {cat.name}\n      </Button>\n    </Grid>\n  } )\n  return (\n    <Grid container>\n      <Grid item>\n        <Button size=\"small\" disabled>{category}</Button>\n      </Grid>\n      <Grid item xs={9}>\n        <Grid container spacing={2}>\n        { render }\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n\nCatListModalItem.propTypes = {\n  category: PropTypes.string.isRequired,\n  sub: PropTypes.array.isRequired\n}\n\nexport default CatListModalItem\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Container from '@material-ui/core/Container';\n\nimport CatListModalItem from './CatListModalItem';\n\nconst styles = theme => ({\n  root: {\n\n  }\n});\n\n/**\n * @class CatListModal\n */\nconst CatListModal = ({ playlist, isOpen, toggle_modal } ) =>  {\n  return (\n    <Dialog\n      fullWidth\n      maxWidth=\"md\"\n      open={isOpen}\n      aria-labelledby=\"cat-list\"\n      onClose={ () => toggle_modal(false)}\n    >\n      <DialogTitle id=\"cat-list\">全部</DialogTitle>\n      <DialogContent dividers>\n        <Container fixed>\n        {\n          playlist.categories.payload.categories && Object.keys(playlist.categories.payload.categories).map( (cat_id) => {  return <CatListModalItem category={playlist.categories.payload.categories[cat_id]} cat_id={cat_id} sub={playlist.categories.payload.sub} key={cat_id} toggle_modal={toggle_modal}/>\n            })\n        }\n        </Container>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nCatListModal.propTypes = {\n  playlist: PropTypes.object.isRequired,\n}\n\nconst StyledCatListModal = withStyles(styles)(CatListModal);\nexport default (StyledCatListModal)","import React from 'react';\nimport { connect } from 'react-redux';\nimport queryString from 'query-string';\nimport { PLAYLIST_CONFIG } from '../constants/APIConfig';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\n\nimport {\n  fetch_playlist,\n  fetch_playlist_hot,  \n  fetch_playlist_category,\n  toggle_modal } from '../actions';\n\nimport PlaylistComponent from '../components/PlaylistComponent';\nimport Progress from '../components/Progress';\nimport HotCat from '../components/HotCat';\nimport CatListModal from '../components/CatListModal';\nimport Pagination from \"material-ui-flat-pagination\";\n\nconst styles = theme => ({\n  root: {\n  },\n  icon: {\n    fontSize: 16\n  }\n});\n\nconst mapStateToProps = state => {\n  return {\n    playlist: state.playlist,\n    ui: state.ui\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({  \n  toggle_modal: (toggle) => dispatch(toggle_modal(toggle)),\n  fetch_playlist: (params) => dispatch(fetch_playlist(params)),\n  fetch_playlist_hot: () => dispatch(fetch_playlist_hot()),\n  fetch_playlist_category: () => dispatch(fetch_playlist_category()),\n})\n\nclass Playlist extends React.Component {\n\n  componentDidMount() {\n    this.props.fetch_playlist()\n    this.props.fetch_playlist_hot()\n    this.props.fetch_playlist_category()\n  }\n\n  componentDidUpdate (prevProps) {\n    if(prevProps.location.search !== this.props.location.search) {\n      this.props.fetch_playlist()\n    }\n  }\n\n  handlePaginationClick (offset) {\n    const { history } = this.props;\n    var parsed = queryString.parse(history.location.search);    \n    parsed.offset = offset;\n    parsed.limit = parsed.limit || PLAYLIST_CONFIG.limit    \n    history.push( `/?${queryString.stringify(parsed)}`)\n  }\n\n  render() {\n    const { ui, toggle_modal, playlist, classes, location } = this.props;    \n    const parsed = queryString.parse(location.search);\n    let playlists = playlist.playlists.payload.playlists;\n    let render = playlists && playlists.map(playlist => {\n      return (<Grid item xs={12} sm={6} md={3} lg={2} xl={1} key={playlist.id}><PlaylistComponent playlist={playlist} key={playlist.id} /></Grid>)\n    })\n    return (\n        <div className={classes.root}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Grid container justify=\"space-between\" alignItems=\"center\">\n                <Grid item>\n                  <Button size=\"small\" variant=\"outlined\" color=\"primary\" onClick={ () => toggle_modal(true) }>\n                    全部歌单<ChevronRight className={classes.icon} />\n                  </Button>\n                </Grid>\n                <Grid item><HotCat playlist={playlist} location={parsed} /></Grid>\n              </Grid>                \n            </Grid>\n            {render}\n            { !playlist.playlists.loading && <Grid container justify=\"center\" alignItems=\"center\">\n              <Grid item>\n                <Pagination \n                  centerRipple={true}             \n                  limit={PLAYLIST_CONFIG.limit}\n                  offset={parsed.offset || 0}\n                  total={playlist.playlists.payload.total}\n                  onClick={(e, offset) => this.handlePaginationClick(offset)}\n                />\n              </Grid>\n            </Grid>\n            }\n            {playlist.playlists.loading && <Grid item xs={12}><Progress /></Grid>}\n          </Grid>\n          <CatListModal isOpen={ui.modal.isOpen} toggle_modal={toggle_modal} playlist={playlist}/>\n        </div>\n    );\n  }\n}\nconst StyledPlaylist = withStyles(styles)(Playlist);\nexport default connect(mapStateToProps, mapDispatchToProps)(StyledPlaylist)","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\n\nimport Chip from '@material-ui/core/Chip';\nimport LinesEllipsis from 'react-lines-ellipsis'\nimport Moment from 'react-moment';\n\n\nconst styles = theme => ({\n  root: {\n  },\n  cover: {\n    width: 193,\n    height: 193,\n    ...theme.shape\n  },\n  link: {\n    margin: theme.spacing(1)/2\n  },\n  desc: {\n     display: 'inline'\n  },\n  datetime: {\n    color: '#6a6a6a'\n  },\n  cardHeader: {\n    padding: 0,\n    marginBottom: theme.spacing(1)\n  },\n  flexContent: {\n    display: 'flex',\n    alignItems: 'center',    \n  }\n});\n\nclass PlaylistInfo extends React.Component {\n\n  state = {\n    descOpen: false\n  }\n\n  render() {\n    const { classes, playlist } = this.props;\n    return (\n      <Grid container spacing={2}>\n        <Grid item>\n          <CardMedia\n            className={classes.cover}\n            image={playlist.playlist.coverImgUrl}\n            title={playlist.playlist.name}\n          />\n        </Grid>\n        <Grid item xs={9}>\n          <Typography className={classes.flexContent} component=\"h6\" variant=\"h5\" gutterBottom>\n            <Chip color=\"secondary\" variant=\"outlined\" label={`歌单`} className={classes.link}/> {playlist.playlist.name}\n          </Typography>\n          <CardHeader\n            className={classes.cardHeader}\n            avatar={\n              playlist.playlist.creator && <Avatar alt={playlist.playlist.creator.nickname} src={playlist.playlist.creator.avatarUrl} />\n            }\n            title={\n              <React.Fragment>\n              {playlist.playlist.creator.nickname}&nbsp;&nbsp;<Moment format=\"YYYY-MM-DD\" className={classes.datetime}>{playlist.playlist.createTime}</Moment>创建\n              </React.Fragment>\n            }\n          />\n          {playlist.playlist.tags.length > 0 && \n            <Typography gutterBottom className={classes.flexContent}>\n              标&nbsp;&nbsp;&nbsp;签: {playlist.playlist.tags.map( (tag, i) => {\n                return (<Chip key={i} clickable component={Link} color=\"secondary\" variant=\"outlined\" className={classes.link} to={`/?cat=${encodeURIComponent(tag)}`} label={tag} />)\n              })}\n            </Typography>\n          }\n          <Typography gutterBottom>\n            歌曲数: {playlist.playlist.trackCount}&nbsp;&nbsp;播放数: {playlist.playlist.playCount}次\n          </Typography>\n\n          <Typography className={classes.desc} component=\"div\" onClick={ () => {\n            this.setState({\n              descOpen: !this.state.descOpen\n            })\n          }}>\n            简&nbsp;&nbsp;&nbsp;介:&nbsp;\n            {\n              !this.state.descOpen ? <LinesEllipsis text={playlist.playlist.description.trim()} maxLine='1' ellipsis='...' /> :\n              playlist.playlist.description.trim()\n            }\n          </Typography>\n        </Grid>\n      </Grid>\n    );\n  }\n}\nexport default withStyles(styles)(PlaylistInfo);","import React from 'react';\n\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport pink from '@material-ui/core/colors/pink';\n\n\nconst styles = theme => ({\n  root: {    \n  },\n  icon: {\n   width: 20,\n   height: 20,\n   display: 'flex',\n   overflow: 'hidden'\n  },\n  element: {\n    width: 2,\n    height: '100%',\n    backgroundColor: pink[500],\n    marginLeft: 2,\n    animation: '$play .9s infinite alternate linear',    \n    \"&:first-child\": {\n      marginLeft: 0\n    }\n  },\n  'paused': {\n    animationPlayState: 'paused'  \n  },\n  '@keyframes play': {\n    '0%': {        \n      transform: 'translateY(0)'\n    },\n    '100%': {        \n      transform: 'translateY(75%)'\n    }      \n  }\n});\n\nconst AudioIcon = ( { classes, player } ) => {    \n  return (\n    <div className={classes.icon}>\n      <span className={clsx(classes.element, {[classes.paused]: player.paused})} style={{animationDelay: '-1.2s'}}/>\n      <span className={clsx(classes.element, {[classes.paused]: player.paused})} />\n      <span className={clsx(classes.element, {[classes.paused]: player.paused})} style={{animationDelay: '-1.5s'}}/>\n      <span className={clsx(classes.element, {[classes.paused]: player.paused})} style={{animationDelay: '-0.9s'}}/>\n      <span className={clsx(classes.element, {[classes.paused]: player.paused})} style={{animationDelay: '-0.6s'}}/>\n    </div>\n  );\n}\nexport default withStyles(styles)(AudioIcon);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport 'moment/locale/zh-cn';\n\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\n\nimport AudioIcon from './player/AudioIcon';\n\nconst styles = theme => ({\n  root: {\n  },\n  tableCellHeader: {\n    marginRight: theme.spacing(1)\n  },\n  tableRowBgColor: {\n    backgroundColor: theme.palette.grey[100]\n  },\n  disableTextColor: {\n    color: theme.palette.grey[500]\n  },\n  linkText: {\n    ...theme.linkText\n  },\n  tableRow: {\n    '&:hover': {\n      backgroundColor: theme.palette.grey[300]\n    }\n  }\n});\n\nconst PlaylistTrack = ({ classes, search_text, no_tracks, tracks, player_get_playlist, player, fetch_song_url, player_set_play }) => {    \n  return <Table>\n    <TableHead>\n      <TableRow>\n        <TableCell colSpan={2}>\n          <Typography variant=\"subtitle2\" color=\"textSecondary\">{tracks.length}首</Typography>\n        </TableCell>\n        <TableCell>\n          <Typography variant=\"subtitle2\" color=\"textSecondary\">音乐标题</Typography>\n        </TableCell>\n        <TableCell>\n          <Typography variant=\"subtitle2\" color=\"textSecondary\">歌手</Typography>\n        </TableCell>\n        <TableCell>\n          <Typography variant=\"subtitle2\" color=\"textSecondary\">专辑</Typography>\n        </TableCell>\n        <TableCell>\n          <Typography variant=\"subtitle2\" color=\"textSecondary\">时长</Typography>\n        </TableCell>\n      </TableRow>\n    </TableHead>\n    <TableBody>\n      { no_tracks ? <TableRow><TableCell colSpan={6} align=\"center\">没有找到与\"<Typography color=\"primary\" display=\"inline\">{search_text}</Typography>\"相关的音乐</TableCell></TableRow> :\n        tracks.map( (track, i) => {\n          return (\n            <TableRow key={track.id} className={clsx(classes.tableRow, {\n                [classes.tableRowBgColor]: i%2 === 0\n              })\n            }>\n              <TableCell size=\"small\">\n                <Typography className={clsx(classes.tableCellHeader, {\n                  [classes.disableTextColor]: track.st === 0 ? false : true\n                })} variant=\"subtitle2\" display=\"inline\">{ i+1 < 10 ?  ('0'+(i+1)) : (i+1) }</Typography>\n              </TableCell>\n              <TableCell size=\"small\">\n                <IconButton onClick={ () => {  \n                  if(player.track && player.track.id === track.id) {\n                    player_set_play(!player.paused)\n                  } else {\n                    player_get_playlist(tracks); \n                    fetch_song_url({id: track.id});   \n                  }\n                  \n\n                }} disabled={track.st === 0 ? false : true}>                \n                  {(player.track === track) && <AudioIcon player={player} />}\n                  {(player.track !== track) && ((player.track === track && !player.paused) ? <PauseCircleOutlineIcon fontSize=\"small\" /> : <PlayCircleOutlineIcon fontSize=\"small\" />)}                            \n                </IconButton>                \n              </TableCell>\n              <TableCell size=\"small\">\n                <Typography variant=\"subtitle2\" className={clsx({\n                  [classes.disableTextColor]: track.st === 0 ? false : true\n                })}>{track.name}</Typography>\n              </TableCell>\n              <TableCell size=\"small\">\n                <Typography variant=\"subtitle2\" color=\"textSecondary\">{\n                  track.ar.map( (ar, k) => <Link key={`ar-${k}`} className={classes.linkText} to={`/artists/${ar.id}`}>{ar.name}</Link>).reduce((prev, curr) => [prev, ' / ', curr])\n                }</Typography>\n              </TableCell>\n              <TableCell size=\"small\">\n                <Typography variant=\"subtitle2\" color=\"textSecondary\">{track.al.name}</Typography>\n              </TableCell>\n              <TableCell size=\"small\">\n                <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                  <Moment format=\"mm:ss\">{track.dt}</Moment>\n                </Typography>\n              </TableCell>\n            </TableRow>\n          )\n        })\n      }\n    </TableBody>\n  </Table>\n}\n\nPlaylistTrack.propTypes = {\n  tracks: PropTypes.array.isRequired,\n  player_get_playlist: PropTypes.func.isRequired, \n  player: PropTypes.object.isRequired\n};\n\n\nexport default withStyles(styles)(PlaylistTrack);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Moment from 'react-moment';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\n\nimport Pagination from \"material-ui-flat-pagination\";\n\n\nconst styles = theme => ({\n  root: {\n  },\n  datetime: {\n    color: '#6a6a6a'\n  },\n  reply: {\n    backgroundColor: '#f4f5f5',\n    padding: theme.spacing(1)/2\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none'\n  }\n});\n\nconst PlaylistComment = ({ comments, total, classes, offset, onPaginationClick }) => {    \n    return (\n      <React.Fragment>\n      <List>{\n        comments.map( ( comment, i ) => {\n            return (\n              <React.Fragment key={i}>\n                <ListItem>\n                  <ListItemAvatar>\n                    <Avatar alt={comment.user.nickname} src={comment.user.avatarUrl} />\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={\n                      <React.Fragment>\n                        <Typography\n                          component={Link}\n                          className={clsx(classes.inline, classes.link)}\n                          to=\"/\"\n                        >{comment.user.nickname}: </Typography>\n                        <Typography\n                          component=\"span\"\n                          className={classes.inline}\n                          color=\"textPrimary\"\n                        >\n                          {comment.content}\n                        </Typography>\n                      </React.Fragment>\n                    }\n                    secondary={\n                      <React.Fragment>\n                        <Moment fromNow locale=\"zh-cn\">{comment.time}</Moment>\n                        {\n                          comment.beReplied.length > 0 &&\n                          <List className={classes.reply}>\n                           { comment.beReplied.map( (reply, reply_index) => {\n                            const text = reply.content ? `${reply.user.nickname}: ${reply.content}` : '该评论已删除';\n                            return <React.Fragment key={`reply-${reply_index}`}>\n                                <ListItemText  primary={\n                                  <React.Fragment>\n                                    <Typography\n                                      component={Link}\n                                      className={clsx(classes.inline, classes.link)}\n                                      to=\"/\"\n                                      variant=\"subtitle2\"\n                                    > {reply.user.nickname}: </Typography>\n                                    <Typography\n                                      component=\"span\"\n                                      color=\"textPrimary\"\n                                      variant=\"body2\"\n                                    >\n                                      {text}\n                                    </Typography>\n                                  </React.Fragment>\n                                }/>\n                              </React.Fragment>\n                            })\n                          }\n                          </List>\n                        }\n                      </React.Fragment>\n                    }\n                    secondaryTypographyProps={{component: 'div'}}\n                  />\n                </ListItem>\n                <Divider variant=\"inset\" component=\"li\"/>\n              </React.Fragment>\n              )\n          })\n      }</List>\n      <Grid container justify=\"center\" spacing={3}>\n        <Grid item>\n          <Pagination \n            className={classes.pagination}                    \n            limit={30}\n            offset={offset || 0}\n            total={total}\n            onClick={(e, offset) => onPaginationClick(offset)}\n          />\n        </Grid>        \n      </Grid>\n      </React.Fragment>\n    )\n}\n\nexport default withStyles(styles)(PlaylistComment);","import React from 'react';\n// import { Link } from 'react-router-dom';\n\n// import classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\n// import Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Container from '@material-ui/core/Container';\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\nimport FaceIcon from '@material-ui/icons/Face';\nimport Pagination from \"material-ui-flat-pagination\";\n\nconst styles = theme => ({\n  root: {\n\n  },\n  flex: {\n    display: 'flex',\n\n  },\n  avatar: {\n    width: 96,\n    height: 96\n  },\n  container: {\n    padding: theme.spacing(2)\n  },\n  itemText: {\n    padding: theme.spacing(2)\n  },\n  pagination: {\n    margin: theme.spacing(3)\n  }\n});\n\n\nconst PlaylistSubscriber = ({playlist, classes, offset, onPaginationClick}) => {\n  return (\n    <Container className={classes.container}>\n      <Grid container spacing={3}>\n        {\n          playlist.subscribers.payload.subscribers.map( (subscriber, i) => {\n            return <Grid item lg={3} md={6} key={i}>\n              <ListItem alignItems=\"center\">\n                <ListItemAvatar>\n                  <Avatar alt={subscriber.nickname} src={subscriber.avatarUrl} className={classes.avatar} />\n                </ListItemAvatar>\n                <ListItemText className={classes.itemText} primary={\n                  <React.Fragment>\n                    {subscriber.nickname}\n                    {subscriber.gender > 0 &&\n                     <FaceIcon color={subscriber.gender === 1 ? 'primary' : 'secondary'} />\n                    }\n                  </React.Fragment>\n                } secondary={subscriber.signature} primaryTypographyProps={{'className': classes.flex}}/>\n\n              </ListItem>\n            </Grid>\n          })\n        }        \n      </Grid>      \n      <Grid container justify=\"center\" alignItems=\"center\" spacing={3}>\n        <Grid item>\n          <Pagination \n            className={classes.pagination}                    \n            limit={30}\n            offset={offset || 0}\n            total={playlist.playlist.payload.playlist.subscribedCount}\n            onClick={(e, offset) => onPaginationClick(offset)}\n          />\n        </Grid>\n      </Grid>  \n    </Container>\n  )\n}\n\n\nexport default withStyles(styles)(PlaylistSubscriber);","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport { fetch_playlist_detail, fetch_playlist_comment, fetch_playlist_subscriber, fetch_song_url } from '../actions';\nimport { player_get_playlist, player_set_play } from '../actions/player';\n\nimport Progress from '../components/Progress';\nimport PlaylistInfo from '../components/PlaylistInfo';\nimport PlaylistTrack from '../components/PlaylistTrack';\nimport PlaylistComment from '../components/PlaylistComment';\nimport PlaylistSubscriber from '../components/PlaylistSubscriber';\n\nconst styles = theme => ({\n  root: {\n  },\n  tabRoot: {\n    borderBottom: '1px solid #e8e8e8',\n  },\n  searchInput: {\n    '& input': {\n      padding: 8\n    }\n  }\n});\n\nconst mapStateToProps = state => ({\n ...state\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetch_playlist_detail: (playlist_id) => dispatch(fetch_playlist_detail(playlist_id)),\n  fetch_playlist_comment: (playlist_id) => dispatch(fetch_playlist_comment(playlist_id)),\n  fetch_playlist_subscriber: (playlist_id) => dispatch(fetch_playlist_subscriber(playlist_id)),  \n  fetch_song_url: (params) => dispatch(fetch_song_url(params)),  \n  player_get_playlist: (playlist) => dispatch(player_get_playlist(playlist)),\n  player_set_play: (paused) => dispatch(player_set_play(paused)),\n})\n\nclass PlaylistDetail extends React.Component {\n\n  state = {\n    value: 0,\n    tracks: [],\n    search_text: \"\",\n    no_tracks: false,\n    comment_offset: 0,\n    subscriber_offset: 0\n  }\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n    const { match, fetch_playlist_comment, fetch_playlist_subscriber } = this.props;\n    if(value === 1) {\n      this.setState({\n        comment_offset: 0\n      })\n      fetch_playlist_comment( {id: match.params.id, limit: 30, offset: 0} )\n    } else if(value === 2) {\n      this.setState({\n        subscriber_offset: 0\n      })\n      fetch_playlist_subscriber( {id: match.params.id, limit: 30, offset: 0} )\n    } else if(value === 0) {\n      // var song_ids = playlist.playlist.payload.playlist.trackIds.map( (track) => { return track.id; })\n      // fetch_song_detail({ids: song_ids.join(\",\")})\n    }\n  }\n\n  onInputChange = (evt) => {\n    var search = evt.target.value.trim().toLowerCase()\n    let tracks = this.props.playlist.songs.payload.songs.filter((item)=>{\n      return item.name.toLowerCase().indexOf(search) !== -1 || item.ar[0].name.toLowerCase().indexOf(search) !== -1 || item.al.name.toLowerCase().indexOf(search) !== -1\n    });\n    var no_tracks = tracks.length > 0 ? false : true;\n\n    this.setState({\n      tracks: tracks,\n      no_tracks: no_tracks,\n      search_text: evt.target.value.trim()\n    });\n  }\n\n  onCommentPaginationClick = (value) => {\n    const { match, fetch_playlist_comment } = this.props;\n    fetch_playlist_comment({ id: match.params.id, limit: 30, offset: value } )\n    this.setState({ comment_offset: value })\n  }\n\n  onSubscriberPaginationClick = (value) => {\n    const { match, fetch_playlist_subscriber } = this.props;\n    fetch_playlist_subscriber({ id: match.params.id, limit: 30, offset: value } )\n    this.setState({ subscriber_offset: value })\n  }\n\n\n  componentDidMount() {\n    const { fetch_playlist_detail, match } = this.props;\n    fetch_playlist_detail({id:match.params.id})\n  }\n\n  render() {\n    const { classes, playlist, player_get_playlist, player, fetch_song_url, player_set_play } = this.props;\n    let playlistInfo = playlist.playlist;\n    var tracks = [];\n    if(this.state.tracks.length > 0) {\n      tracks = this.state.tracks;\n    } else {\n      tracks = playlist.songs.payload.songs ? playlist.songs.payload.songs : [];\n    }\n    const { value } = this.state;\n    const player_props = {\n      player, player_get_playlist, fetch_song_url, player_set_play\n    }\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={3}>\n        <Grid item xs={12}>\n        {\n          playlistInfo.loading ? <Progress /> : playlistInfo.payload.playlist.creator && <PlaylistInfo playlist={playlistInfo.payload}/>\n        }\n        </Grid>\n        { playlist.playlist.payload.playlist &&\n          <Grid item xs={12}>\n            <Grid container justify=\"space-between\" alignItems=\"center\" className={classes.tabRoot}>\n              <Grid item>\n                <Tabs\n                  value={this.state.value}\n                  onChange={this.handleChange}\n                  indicatorColor=\"secondary\"\n                  textColor=\"secondary\"\n                >\n                  <Tab label=\"歌曲列表\" value={0} />\n                  <Tab label={`评论(${playlist.playlist.payload.playlist.commentCount ? playlist.playlist.payload.playlist.commentCount: 0})`} value={1}/>\n                  <Tab label=\"收藏者\" value={2}/>\n                </Tabs>\n              </Grid>\n              { this.state.value === 0 &&\n              <Grid item>\n                <TextField\n                  variant=\"outlined\"\n                  placeholder=\"搜索歌单音乐\"\n                  InputProps={{\n                    startAdornment: <InputAdornment position=\"start\"><SearchIcon /></InputAdornment>,\n                  }}\n                  onChange={this.onInputChange}\n                  className={classes.searchInput}\n                  type=\"search\"\n                />\n              </Grid>\n              }\n            </Grid>\n            { value === 0 && (playlist.songs.loading ? <Progress /> : <PlaylistTrack {...player_props} search_text={this.state.search_text} no_tracks={this.state.no_tracks} tracks={tracks}/>) }\n            { value === 1 && (playlist.comments.loading ? <Progress /> : <PlaylistComment comments={playlist.comments.payload.comments} total={playlist.comments.payload.total} offset={this.state.comment_offset} onPaginationClick={this.onCommentPaginationClick} />) }\n            { value === 2 && (playlist.subscribers.loading ? <Progress /> : <PlaylistSubscriber playlist={playlist} offset={this.state.subscriber_offset} onPaginationClick={this.onSubscriberPaginationClick} />) }\n          </Grid>\n        }\n        </Grid>\n\n      </div>\n    );\n  }\n}\nconst StyledPlaylistDetail = withStyles(styles)(PlaylistDetail);\nexport default connect(mapStateToProps, mapDispatchToProps)(StyledPlaylistDetail)\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport { fetch_search } from '../actions';\n\nconst styles = theme => ({\n  root: {\n  }\n});\n\nconst mapStateToProps = state => {\n  return {\n    playlist: state.playlist\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({  \n  fetch_search: (params) => dispatch(fetch_search(params)),\n})\n\nclass Search extends React.Component {\n\n  state = {\n    value: 0,\n    tabs: [\n      { text: '单曲', value: 0 },\n      { text: '歌手', value: 1 },\n      { text: '专辑', value: 2 },\n      { text: '视频', value: 3 },\n      { text: '歌单', value: 4 },\n      { text: '歌词', value: 5 },\n      { text: '主播电台', value: 6 },\n      { text: '用户', value: 7 },\n    ]\n  };\n\n  componentDidMount() {\n    \n  }\n\n  componentDidUpdate (prevProps) {\n   \n  }\n\n  handleChange = (event, newValue) => {\n    this.setState({\n      value: newValue\n    })\n  }\n\n  render() {\n    const { classes } = this.props;   \n    return (\n      <div className={classes.root}>\n        <Tabs value={this.state.value} onChange={this.handleChange}>\n          { this.state.tabs.map( (tab) => <Tab label={tab.text} />) }         \n        </Tabs>\n        { this.state.tabs.map( (tab) => this.state.value === tab.value && <div>{tab.text}</div>) }         \n      </div>\n    );\n  }\n}\nconst StyledSearch = withStyles(styles)(Search);\nexport default connect(mapStateToProps, mapDispatchToProps)(StyledSearch)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\n\nimport { fetch_toplist_detail } from '../actions';\nimport Progress from '../components/Progress';\n\n \nconst styles = theme => ({\n  root: {\n    \n  },\n  cardRoot: {\n    backgroundColor: 'transparent',\n    boxShadow: 'none'\n  },\n  topCard: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'left',\n    alignItems: 'center'\n  },\n  topMedia: {\n    width: 200\n  },\n  media: {\n    borderRadius: 8,\n    marginBottom: theme.spacing(1)\n  },\n  link: {\n    marginTop: theme.spacing(1),\n    color: theme.palette.text.primary,\n    textDecoration:'none'\n  }\n});\n\nconst mapStateToProps = state => ({\n ...state\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetch_toplist_detail: () => dispatch(fetch_toplist_detail()),\n})\n\nclass Toplist extends React.Component {\n\n  componentDidMount() {\n    this.props.fetch_toplist_detail()\n  }\n\n  render() {\n    const { classes, playlist } = this.props;\n    console.log(playlist)\n    let top4 = playlist.toplist_detail.payload.list && playlist.toplist_detail.payload.list.slice(0, 4);\n    let top4_render = '';\n    if(top4) {      \n      top4_render = top4.map( (playlist) => {\n        return (\n          <Grid item xs={12} sm={3} md={3} lg={3} xl={3} key={playlist.id}>\n            <Card className={classes.topCard} >\n              <CardActionArea className={classes.topMedia} component={Link} to={`/playlist/${playlist.id}`}>\n                  <CardMedia\n                    image={playlist.coverImgUrl || playlist.coverUrl}\n                    title={playlist.name}\n                    component=\"img\"\n                  />    \n              </CardActionArea>\n                <List>\n                {playlist.tracks && playlist.tracks.map( (track, i) => {\n                  return <ListItem key={`track-${i}`} dense>\n                    <ListItemText\n                      primary={\n                        <React.Fragment>                          \n                          <Typography variant=\"body2\" component=\"span\">{track.first}</Typography>\n                          <Typography variant=\"body2\" component=\"span\" color=\"textSecondary\">{` - ${track.second}`}</Typography>\n                        </React.Fragment>\n                      }\n                    />                  \n                  </ListItem>\n                })}\n                </List>\n            </Card>\n          </Grid>)   \n      });      \n    }\n    let render = playlist.toplist_detail.payload.list && playlist.toplist_detail.payload.list.slice(4).map(playlist => {\n      return (<Grid item xs={12} sm={6} md={3} lg={2} xl={1} key={playlist.id}>\n        <Card className={classes.cardRoot} >\n          <CardActionArea component={Link} to={`/playlist/${playlist.id}`}>\n            <CardMedia   \n              className={classes.media}\n              image={playlist.coverImgUrl}\n              title={playlist.name}\n              component=\"img\"\n            />    \n          </CardActionArea>\n          <Typography className={classes.link} variant=\"subtitle2\" component={Link} to={`/playlist/${playlist.id}`}>\n            {playlist.name}\n          </Typography>\n        </Card>\n      </Grid>)\n    })\n    return (\n        <div className={classes.root}>\n        <Grid container spacing={3}>\n          {playlist.toplist_detail.loading && <Grid item xs={12}><Progress /></Grid>}\n          {top4_render}          \n          {render}\n        </Grid>\n        </div>\n    );\n  }\n}\nconst StyledToplist = withStyles(styles)(Toplist);\nexport default connect(mapStateToProps, mapDispatchToProps)(StyledToplist)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Typography from '@material-ui/core/Typography';\n\n\nimport { fetch_top_artists } from '../actions';\nimport Progress from '../components/Progress';\n\nimport { } from '../constants/ActionTypes';\n\n \nconst styles = theme => ({\n  root: {\n    \n  },\n  cardRoot: {\n    backgroundColor: 'transparent',\n    boxShadow: 'none'\n  },\n  media: {\n    borderRadius: 8,\n  },\n  link: {\n    marginTop: theme.spacing(1),\n    ...theme.linkText\n  }\n});\n\nconst mapStateToProps = state => ({\n ...state\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetch_top_artists: (parmas) => dispatch(fetch_top_artists(parmas)),\n})\n\nclass Toplist extends React.Component {\n\n  componentDidMount() {\n    this.props.fetch_top_artists()\n  }\n\n  render() {\n    const { classes, playlist } = this.props;\n    console.log(playlist)\n    \n    let render = playlist.top_artists.payload.artists && playlist.top_artists.payload.artists.map(artist => {\n      return (<Grid item xs={12} sm={6} md={3} lg={2} xl={1} key={artist.id}>\n        <Card className={classes.cardRoot}>\n          <CardActionArea component={Link} to={`/artists/${artist.id}`}>\n            <CardMedia   \n              className={classes.media}\n              image={artist.img1v1Url}\n              title={artist.name}\n              component=\"img\"\n            />    \n          </CardActionArea>\n          <Typography display=\"block\" variant=\"subtitle2\" component={Link} to={`/artists/${artist.id}`} className={classes.link}>\n            {artist.name}\n          </Typography>          \n        </Card>\n      </Grid>)\n    })\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={3}>\n          {playlist.top_artists.loading && <Grid item xs={12}><Progress /></Grid>}                        \n          {render}\n        </Grid>\n      </div>\n    );\n  }\n}\nconst StyledToplist = withStyles(styles)(Toplist);\nexport default connect(mapStateToProps, mapDispatchToProps)(StyledToplist)","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  root: {\n  },\n  cover: {\n    width: 193,\n    ...theme.shape\n  },\n  textWrapper: {\n    marginBottom: theme.spacing(1)\n  },\n  textGutterRight: {\n    marginRight: theme.spacing(1)\n  },\n  button: {\n    marginRight: theme.spacing(1.5),    \n  },\n  alias: {\n    marginBottom: theme.spacing(1),\n    \"& p\": {\n      marginRight: theme.spacing(1)\n    }\n  },\n  buttonGroup: {\n    marginBottom: theme.spacing(1)\n  },\n});\n\nconst ArtistInfo = ( { classes, artist} ) => {\n    return (\n      <Grid container spacing={2}>\n      { artist.artist && \n        <React.Fragment>\n        <Grid item>\n          <CardMedia\n            className={classes.cover}\n            image={artist.artist.img1v1Url}\n            title={artist.artist.name}\n            component=\"img\"            \n          />\n        </Grid>\n        <Grid item xs={9}>     \n          <Typography variant=\"h6\" gutterBottom>{artist.artist.name}</Typography>\n          <div className={classes.alias}>\n            {artist.artist.alias.map( (alia, i) => <Typography key={`alia-{i}`} variant=\"body2\" display=\"inline\">{alia}</Typography>)}  \n          </div>\n          <div className={classes.buttonGroup}>\n            <Button size=\"small\" variant=\"outlined\" className={classes.button}>收藏</Button>\n            <Button size=\"small\" variant=\"outlined\" className={classes.button}>个人主页</Button>\n          </div>\n          <div className={classes.textWrapper}>\n            <Typography variant=\"subtitle1\" display=\"inline\" className={classes.textGutterRight}>单曲数:{artist.artist.musicSize}</Typography>\n            <Typography variant=\"subtitle1\" display=\"inline\" className={classes.textGutterRight}>专辑数:{artist.artist.albumSize}</Typography>\n            <Typography variant=\"subtitle1\" display=\"inline\" className={classes.textGutterRight}>MV数:{artist.artist.mvSize}</Typography>\n          </div>\n        </Grid>\n        </React.Fragment>\n      }\n      </Grid>\n    );\n}\nexport default withStyles(styles)(ArtistInfo);","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst styles = theme => ({\n  root: {\n  }\n});\n\nconst ArtistDesc = ( { classes, artist, artist_desc } ) => {\n    return (\n      <div className={classes.root}>\n        <Typography variant=\"h6\" gutterBottom>{artist.artist.name}简介</Typography>\n        <Typography variant=\"body2\" gutterBottom color=\"textSecondary\">{artist.artist.briefDesc}</Typography>\n        {\n          artist_desc.introduction && artist_desc.introduction.map( (intro, i) => {\n            return <div className={classes.intro} key={`intro-${i}`}>              \n              <Typography variant=\"h6\" gutterBottom>{intro.ti}</Typography>\n              {\n                intro.txt.split(\"\\n\").map( (txt, j) => <Typography variant=\"body2\" gutterBottom color=\"textSecondary\" key={`txt-${j}`}>{txt}</Typography>)\n              }\n              \n            </div>\n          })\n        }\n      </div>\n    );\n}\nexport default withStyles(styles)(ArtistDesc);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\nimport Pagination from \"material-ui-flat-pagination\";\nimport Moment from 'react-moment';\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: 'transparent',\n    boxShadow: 'none'\n  },\n  card: {    \n  },\n  media: {    \n    height:'100%',      \n    ...theme.shape\n  },\n  linkText: {\n    marginTop: theme.spacing(1),    \n    ...theme.linkText\n  }\n});\n\nconst ArtistAlbum = ( { classes, albums, offset, onPaginationClick } ) => {\n  let render = albums && albums.hotAlbums.map(album => {\n    return (<Grid item xs={12} sm={6} md={3} lg={2} xl={2} key={`album-${album.id}`}>\n      <Card className={clsx(classes.card, classes.root)} >\n          <CardActionArea component={Link} to={`/album/${album.id}`}>\n              <CardMedia\n                className={classes.media}\n                image={album.picUrl+\"?param=400y400\"}\n                title={album.name}\n                component=\"img\"\n              />\n            </CardActionArea>\n            <CardActionArea className={classes.linkText} component={Link} to={`/album/${album.id}`}>\n              <Typography variant=\"subtitle2\">{album.name}</Typography>              \n              <Typography variant=\"caption\" color=\"textSecondary\"><Moment format=\"YYYY-MM-DD\">{album.publishTime}</Moment></Typography>              \n            </CardActionArea>\n        </Card>\n      </Grid>)\n    })\n  return (\n    <Grid container spacing={3}>\n      {render}\n       <Grid container justify=\"center\" spacing={3}>\n        <Grid item>\n          <Pagination \n            className={classes.pagination}                    \n            limit={60}\n            offset={offset || 0}\n            total={albums.artist.albumSize}\n            onClick={(e, offset) => onPaginationClick(offset)}\n          />\n        </Grid>        \n      </Grid>      \n    </Grid>\n    \n  );\n}\nexport default withStyles(styles)(ArtistAlbum);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\nimport Pagination from \"material-ui-flat-pagination\";\n\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: 'transparent',\n    boxShadow: 'none'\n  },\n  card: {    \n  },\n  media: {    \n    height:'100%',      \n    ...theme.shape\n  },\n  link: {\n    marginTop: theme.spacing(1),\n    color: theme.palette.text.primary,\n    textDecoration:'none'\n  }\n});\n\nconst ArtistMV = ( { classes, artist, mvs, onPaginationClick, offset } ) => {\n  let render = mvs && mvs.mvs.map(mv => {\n    return (<Grid item xs={12} sm={6} md={3} lg={2} xl={2} key={`mv-${mv.id}`}>\n      <Card className={clsx(classes.card, classes.root)} >\n          <CardActionArea component={Link} to=\"/\">\n            <CardMedia\n              className={classes.media}\n              image={mv.imgurl16v9}\n              title={mv.name}\n              component=\"img\"\n            />\n          </CardActionArea>\n          <Typography display=\"block\" component={Link} to=\"/\" variant=\"subtitle2\" className={classes.link}>{mv.name}</Typography>                                        \n        </Card>\n      </Grid>)\n  })\n  return (\n    <Grid container spacing={3}>\n      {render}\n       <Grid container justify=\"center\" spacing={3}>\n        <Grid item>\n          <Pagination \n            className={classes.pagination}                    \n            limit={60}\n            offset={offset || 0}\n            total={artist.artist.mvSize}\n            onClick={(e, offset) => onPaginationClick(offset)}\n          />\n        </Grid>        \n      </Grid>      \n    </Grid>\n    \n  );\n}\nexport default withStyles(styles)(ArtistMV);","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n\nimport { fetch_artist, fetch_artist_album, fetch_artist_mv, fetch_artist_desc, fetch_song_url  } from '../actions';\nimport { player_get_playlist, player_set_track  } from '../actions/player';\nimport Progress from '../components/Progress';\nimport ArtistInfo from '../components/ArtistInfo';\nimport ArtistDesc from '../components/ArtistDesc';\nimport ArtistAlbum from '../components/ArtistAlbum';\nimport ArtistMV from '../components/ArtistMV';\nimport PlaylistTrack from '../components/PlaylistTrack';\n\n \nconst styles = theme => ({\n  root: {\n    \n  },\n  tabs: {\n    borderBottom: '1px solid #e8e8e8'\n  }\n});\n\nconst mapStateToProps = state => ({\n ...state\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetch_artist: (params) => dispatch(fetch_artist(params)),\n  fetch_artist_album: (params) => dispatch(fetch_artist_album(params)),\n  fetch_artist_mv: (params) => dispatch(fetch_artist_mv(params)),\n  fetch_artist_desc: (params) => dispatch(fetch_artist_desc(params)),    \n  fetch_song_url: (params) => dispatch(fetch_song_url(params)),    \n  player_get_playlist: (playlist) => dispatch(player_get_playlist(playlist)),  \n  player_set_track: (track, paused) => dispatch(player_set_track(track, paused)),  \n})\n\nclass Artist extends React.Component {\n\n  state = {\n    value: 0,\n    album_offset: 0,\n    mv_offset: 0\n  }\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n    const { match, fetch_artist_album, fetch_artist_mv, fetch_artist_desc } = this.props;     \n    if(value === 1) {          \n      fetch_artist_album( {id: match.params.id, limit: 60, offset: 0} )\n      this.setState({ album_offset: 0 });\n    } else if(value === 2) {      \n      fetch_artist_mv( {id: match.params.id, limit: 60, offset: 0} )\n      this.setState({ mv_offset: 0 });\n    } else if(value === 3) {      \n      fetch_artist_desc({id: match.params.id})\n    }\n  }\n\n  componentDidUpdate (prevProps) {\n    if(prevProps.location.pathname !== this.props.location.pathname) {\n      this.props.fetch_artist({id:this.props.match.params.id})  \n    }\n  }\n\n  onAlbumPaginationClick = (value) => {\n    const { match, fetch_artist_album } = this.props;     \n    fetch_artist_album({ id: match.params.id, limit: 60, offset: value } )\n    this.setState({ album_offset: value })\n  }\n\n  onMVPaginationClick = (value) => {\n    const { match, fetch_artist_mv } = this.props;     \n    fetch_artist_mv({ id: match.params.id, limit: 60, offset: value } )\n    this.setState({ mv_offset: value })\n  }  \n\n  componentDidMount() {\n    const { fetch_artist, match } = this.props;\n    fetch_artist({id:match.params.id})      \n  }\n\n  render() {\n    const { classes, player, playlist, player_get_playlist, player_set_track, fetch_song_url} = this.props;    \n    const playlistProp = {\n      player_set_track: player_set_track,\n      player: player, \n      player_get_playlist: player_get_playlist,\n      tracks: playlist.songs.payload.songs ? playlist.songs.payload.songs : [],\n      fetch_song_url: fetch_song_url\n    }\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={1}>     \n          <Grid item xs={12}>     \n          { playlist.artist.loading && <Grid item xs={12}><Progress /></Grid> }\n          { !playlist.artist.loading && <ArtistInfo artist={playlist.artist.payload} /> }\n          </Grid>\n          <Grid item xs={12}>     \n            <Tabs\n              className={classes.tabs}\n              value={this.state.value}\n              onChange={this.handleChange}\n              indicatorColor=\"secondary\"\n              textColor=\"secondary\"\n            >\n              <Tab label=\"热门歌曲\" value={0} />\n              <Tab label=\"专辑\" value={1} />\n              <Tab label=\"MV\" value={2} />\n              <Tab label=\"歌手详情\" value={3} />\n            </Tabs>\n          </Grid>\n          <Grid item xs={12}>\n            { this.state.value === 0 && (playlist.songs.loading ? <Progress /> : <PlaylistTrack {...playlistProp } />) }\n            { this.state.value === 1 && (playlist.artist_album.loading ? <Progress /> : <ArtistAlbum albums={playlist.artist_album.payload} onPaginationClick={this.onAlbumPaginationClick} offset={this.state.album_offset} />) }\n            { this.state.value === 2 && (playlist.artist_mv.loading ? <Progress /> : <ArtistMV artist={playlist.artist.payload} mvs={playlist.artist_mv.payload} onPaginationClick={this.onMVPaginationClick} offset={this.state.mv_offset} />) }\n            { this.state.value === 3 && (playlist.artist_desc.loading ? <Progress /> : <ArtistDesc artist={playlist.artist.payload} artist_desc={playlist.artist_desc.payload} />) }\n          </Grid>        \n        </Grid>\n      </div>\n    );\n  }\n}\nconst StyledArtist = withStyles(styles)(Artist);\nexport default connect(mapStateToProps, mapDispatchToProps)(StyledArtist)","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Moment from 'react-moment';\n\nconst styles = theme => ({\n  root: {\n  },\n  cover: {\n    width: 193,\n    ...theme.shape\n  },\n  textWrapper: {\n    marginBottom: theme.spacing(1)\n  },\n  textGutterRight: {\n    marginRight: theme.spacing(1)\n  },\n  button: {\n    marginRight: theme.spacing(1.5),    \n  },\n  alias: {\n    marginBottom: theme.spacing(1),\n    \"& p\": {\n      marginRight: theme.spacing(1)\n    }\n  },\n  buttonGroup: {\n    marginBottom: theme.spacing(1)\n  },\n  linkText: {\n    ...theme.linkText\n  }\n});\n\nconst AlbumInfo = ( { classes, album } ) => {    \n    return (\n      <Grid container spacing={2}>      \n        <Grid item>\n          <CardMedia\n            className={classes.cover}\n            image={album.picUrl}\n            title={album.name}\n            component=\"img\"            \n          />\n        </Grid>\n        <Grid item xs={9}>     \n          <Typography variant=\"h6\" gutterBottom>{album.name}</Typography>\n          <div className={classes.alias}>\n            歌手:{album.artists.map( (artist, i) => <Typography className={clsx(classes.linkText, classes.textGutterRight)} key={`artist-${i}`} variant=\"body2\" display=\"inline\" component={Link} to={`/artists/${artist.id}`}>{artist.name}</Typography>)}  \n          </div>\n          <div className={classes.textWrapper}>\n            <Typography variant=\"body2\" display=\"block\" className={classes.textGutterRight}>时间: <Moment format=\"YYYY-MM-DD\">{album.publishTime}</Moment></Typography>            \n            <Typography variant=\"body2\" display=\"block\" className={classes.textGutterRight}>发行公司: {album.company}</Typography>            \n          </div>\n        </Grid>\n      </Grid>\n    );\n}\nexport default withStyles(styles)(AlbumInfo);","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\n\n\nimport { fetch_album, fetch_album_comment, fetch_song_url  } from '../actions';\nimport { player_set_track, player_get_playlist  } from '../actions/player';\nimport Progress from '../components/Progress';\nimport AlbumInfo from '../components/AlbumInfo';\nimport PlaylistTrack from '../components/PlaylistTrack';\nimport PlaylistComment from '../components/PlaylistComment';\n\n \nconst styles = theme => ({\n  root: {\n    \n  },\n  tabs: {\n    borderBottom: '1px solid #e8e8e8'\n  }\n});\n\nconst mapStateToProps = state => ({\n ...state\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetch_album: (params) => dispatch(fetch_album(params)),\n  fetch_album_comment: (params) => dispatch(fetch_album_comment(params)),\n  fetch_song_url: (params) => dispatch(fetch_song_url(params)),\n  player_set_track: (tracks, paused) => dispatch(player_set_track(tracks, paused)),\n  player_get_playlist: (playlist) => dispatch(player_get_playlist(playlist)),\n})\n\nclass Album extends React.Component {\n\n  state = {\n    value: 0,    \n    comment_offset: 0\n  }\n\n  handleChange = (event, value) => {\n    this.setState({ value });    \n    const { fetch_album_comment, match} = this.props;\n    if(value === 1) {\n      fetch_album_comment({id:match.params.id})\n    }\n  }\n\n  onCommentPaginationClick = (value) => {\n    const { match, fetch_album_comment } = this.props;     \n    fetch_album_comment({ id: match.params.id, limit: 30, offset: value } )\n    this.setState({ comment_offset: value })\n  }  \n\n\n\n  componentDidMount() {\n    const { fetch_album, match } = this.props;\n    fetch_album({id:match.params.id})      \n  }\n\n  render() {\n    const { classes, player, playlist, player_get_playlist, fetch_song_url } = this.props;    \n    const playlist_props = {\n      player: player, \n      player_get_playlist: player_get_playlist,\n      tracks: playlist.songs.payload.songs ? playlist.songs.payload.songs : [],\n      fetch_song_url: fetch_song_url\n    }\n    const comment_props = {\n      comments: playlist.album_comment.payload.comments,\n      total: playlist.album_comment.payload.total, \n      offset: this.state.comment_offset, \n      onPaginationClick: this.onCommentPaginationClick\n    }\n\n\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={1}>     \n          <Grid item xs={12}>     \n          { playlist.album.loading ? <Progress /> : <AlbumInfo album={playlist.album.payload.album} /> }\n          </Grid>\n          <Grid item xs={12}>     \n            <Tabs\n              className={classes.tabs}\n              value={this.state.value}\n              onChange={this.handleChange}\n              indicatorColor=\"secondary\"\n              textColor=\"secondary\"\n            >\n              <Tab label=\"歌曲列表\" value={0} />\n              <Tab label={`评论(${playlist.album.payload.album ? playlist.album.payload.album.info.commentCount : 0})`} value={1} />\n              <Tab label=\"专辑详情\" value={2} />\n            </Tabs>\n          </Grid>\n          <Grid item xs={12}>\n            { this.state.value === 0 && (playlist.songs.loading ? <Progress /> : <PlaylistTrack {...playlist_props } />) }\n            { this.state.value === 1 && (playlist.album_comment.loading ? <Progress /> : <PlaylistComment {...comment_props } />) }\n            { this.state.value === 2 && (\n              <div>\n              <Typography variant=\"h6\" gutterBottom>专辑介绍</Typography>    \n              {\n                playlist.album.payload.album.description && playlist.album.payload.album.description.split(\"\\n\").map( (description, i) => {\n                  return <Typography key={`desc-${i}`} variant=\"body2\" color=\"textSecondary\" gutterBottom>{description}</Typography>                                                          \n                })\n              }</div>\n            ) }\n          </Grid>        \n        </Grid>\n      </div>\n    );\n  }\n}\nconst StyledAlbum = withStyles(styles)(Album);\nexport default connect(mapStateToProps, mapDispatchToProps)(StyledAlbum)","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Moment from 'react-moment';\n\nconst styles = theme => ({\n  root: {\n    borderRadius: 0,\n    display: 'flex',    \n    flexDirection: 'row',\n    alignItems: 'center',\n    boxShadow: theme.shadows[0],\n    backgroundColor: 'transparent',\n    margin: theme.spacing(1)\n  },\n  media: {    \n    width: 64-theme.spacing(2),\n    height: 64-theme.spacing(2),\n  },\n  cardMedia: {\n    flex: '0 0 64',\n  },\n  content: {\n    marginLeft: theme.spacing(1),\n  }\n});\n\nconst TrackInfo = ( { classes, player } ) => {    \n    return (\n      <Card className={classes.root}>\n        <div className={classes.cardMedia}>\n        <CardMedia\n          className={classes.media}\n          image={`${player.track.al.picUrl}?param=64y64`}\n          title={ player.track.name }\n        />\n        </div>\n        <div className={classes.content}>\n          <Typography variant=\"subtitle2\" display=\"inline\" noWrap>{ player.track.name } - </Typography>\n          <Typography variant=\"subtitle2\" display=\"inline\" color=\"textSecondary\" noWrap>{\n            player.track.ar.map( ar => ar.name).join(\" / \")\n          }</Typography>\n          <Typography variant=\"subtitle2\" color=\"textSecondary\">\n            <Moment format=\"mm:ss\">{player.current_time*1000}</Moment> / <Moment format=\"mm:ss\">{player.duration*1000}</Moment>\n          </Typography>\n        </div>\n      </Card>\n    );\n}\nexport default withStyles(styles)(TrackInfo);","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\n\n\nconst styles = theme => ({\n  root: {    \n  }\n});\n\nconst Control = ( { classes, player, player_set_play, fetch_song_url } ) => {    \n  let track = {};\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={ () => {\n          if(player.available_playlist.length > 0 && player.track) {\n            let track_index = player.available_playlist.indexOf(player.track)-1;\n            if((track_index) < 0) track_index = player.available_playlist.length-1;\n            track = player.available_playlist[track_index];\n            fetch_song_url({id: track.id});  \n          }                  \n        \n      }}>\n        <SkipPreviousIcon fontSize=\"small\"/>\n      </IconButton>      \n      <IconButton color=\"secondary\" onClick={ () => {  \n        if(player.available_playlist.length > 0) {\n          player_set_play(!player.paused)\n        }             \n      }}>\n        { !player.paused ? <PauseCircleOutlineIcon fontSize=\"large\"/> : <PlayCircleOutlineIcon fontSize=\"large\"/> }\n      </IconButton>\n      <IconButton onClick={ () => {    \n        if(player.available_playlist.length > 0) {\n          if(player.playmode === 2) {\n            track = player.available_playlist[Math.floor(Math.random()*player.available_playlist.length)]\n          } else {\n            if(player.track) {\n              let track_index = player.available_playlist.indexOf(player.track)+1;\n              if((track_index) > player.available_playlist.length-1) track_index = 0;\n              track = player.available_playlist[track_index];\n            }               \n          } \n          fetch_song_url({id: track.id});            \n        }\n      }}>\n        <SkipNextIcon fontSize=\"small\" />\n      </IconButton>\n    </div>\n  );\n}\nexport default withStyles(styles)(Control);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport clsx from 'clsx';\nimport Moment from 'react-moment';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Slide from '@material-ui/core/Slide';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nimport AudioIcon from './AudioIcon';\n\n\n\nconst styles = theme => ({\n  root: {\n    zIndex: theme.zIndex.drawer - 1,    \n    position: 'fixed',\n    bottom: 70,\n    right: theme.spacing(1),\n    padding: theme.spacing(2) \n  },\n  tab: {\n    minWidth: 80\n  },\n  table: {\n    width: 600,        \n    maxHeight: 500,\n    minHeight: 500,\n    overflow:'auto'\n  },\n  linkText: {\n    ...theme.linkText\n  },\n  disableTextColor: {\n    color: theme.palette.grey[500]\n  }\n});\n\nconst Playlist = ( { classes, player, fetch_song_url, player_toggle_playlist, player_set_play } ) => {   \n  return (  \n    <Slide direction=\"up\" in={player.open_playlist} mountOnEnter unmountOnExit>\n      <Paper className={clsx(classes.root)}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} container justify=\"space-between\">\n            <Grid item>            \n              <Tabs value={0}>\n                <Tab label=\"正在播放\" value={0} className={classes.tab}/>\n              </Tabs>\n            </Grid>\n            <Grid item>\n              <IconButton onClick={ () => player_toggle_playlist(false) }>\n                <ClearIcon fontSize=\"small\"/>\n              </IconButton>\n            </Grid>\n          </Grid>          \n          <Grid item xs={12} className={classes.table}>\n            <Table >                            \n              <TableBody>\n              {\n                player.playlist.map( (track, i) => {\n                  return (\n                    <TableRow key={track.id}>\n                      <TableCell size=\"small\">\n                        <Typography className={clsx(classes.tableCellHeader,{\n                          [classes.disableTextColor]: track.st === 0 ? false : true\n                        })} variant=\"subtitle2\" display=\"inline\">{ i+1 < 10 ?  ('0'+(i+1)) : (i+1) }</Typography>\n                      </TableCell>\n                      <TableCell size=\"small\">\n                      <IconButton onClick={ () => {\n                          if(player.track && player.track.id === track.id) {\n                            player_set_play(!player.paused)\n                          } else {\n                            fetch_song_url({id: track.id});   \n                          }\n                          \n                        } \n                      } disabled={track.st === 0 ? false : true}>\n                        {(player.track === track) && <AudioIcon player={player} />}\n                        {(player.track !== track) && ((player.track === track && !player.paused) ? <PauseCircleOutlineIcon fontSize=\"small\" /> : <PlayCircleOutlineIcon fontSize=\"small\" />)}\n                      </IconButton>\n                      </TableCell>\n                      <TableCell size=\"small\">\n                        <Typography variant=\"subtitle2\" className={clsx(classes.tableCellHeader,{\n                          [classes.disableTextColor]: track.st === 0 ? false : true\n                        })}>{track.name}</Typography>\n                      </TableCell>\n                      <TableCell size=\"small\">\n                        <Typography variant=\"subtitle2\" color=\"textSecondary\">{\n                          track.ar.map( (ar, k) => <Link key={`ar-${k}`} className={classes.linkText} to={`/artists/${ar.id}`}>{ar.name}</Link>).reduce((prev, curr) => [prev, ' / ', curr])\n                        }</Typography>\n                      </TableCell>              \n                      <TableCell size=\"small\">\n                        <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                          <Moment format=\"mm:ss\">{track.dt}</Moment>\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  )\n                })\n              }\n              </TableBody>\n            </Table>        \n          </Grid>\n        </Grid>\n      </Paper>   \n    </Slide>                                     \n  );\n}\nexport default withStyles(styles)(Playlist);","import React from 'react';\n\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Slide from '@material-ui/core/Slide';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\n\n\n\nconst styles = theme => ({\n  root: {\n    zIndex: theme.zIndex.drawer - 1,    \n    position: 'fixed',\n    bottom: 70,\n    right: theme.spacing(1),\n    padding: theme.spacing(2),    \n  },\n\n  tab: {\n    minWidth: 80,    \n  },  \n  container: {\n    marginTop: theme.spacing(1),\n    width: 600,        \n    maxHeight: 500,\n    minHeight: 500,\n    overflow:'auto'\n  }\n\n});\n\nconst LyricPanel = ( { classes, player, playlist, player_toggle_lyric } ) => {   \n  return (  \n    <Slide direction=\"up\" in={player.open_lyric} mountOnEnter unmountOnExit>\n      <Paper className={clsx(classes.root)}>  \n        <Grid container>      \n          <Grid item xs={12} container justify=\"space-between\">\n            <Grid item>            \n              <Tabs value={0}>\n                <Tab label=\"歌词\" value={0} className={classes.tab}/>\n              </Tabs>\n            </Grid>\n            <Grid item>\n              <IconButton onClick={ () => player_toggle_lyric(false) }>\n                <ClearIcon fontSize=\"small\"/>\n              </IconButton>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.container}>\n            {\n              playlist.lyric.payload.lrc && playlist.lyric.payload.lrc.lyric.split(\"\\n\").map( (txt, j) => <Typography variant=\"body2\" gutterBottom color={txt.indexOf(player.lyric_index) > -1 ? 'secondary' : 'textSecondary' } key={`txt-${j}`}>\n              {txt.replace(/\\[(.*?)\\]/g,\"\")}</Typography>)\n            }        \n          </Grid>\n        </Grid>\n      </Paper>   \n    </Slide>                                     \n  );\n}\nexport default withStyles(styles)(LyricPanel);","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport greyColor from '@material-ui/core/colors/grey';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Grid from '@material-ui/core/Grid';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\n\n\nimport Moment from 'react-moment';\n\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\n\nimport TrackInfo from '../components/player/TrackInfo';\nimport Control from '../components/player/Control';\nimport Playlist from '../components/player/Playlist';\nimport LyricPanel from '../components/player/LyricPanel';\n\nimport { set_audio, player_set_current_time, player_set_track, player_get_playmode, player_toggle_playlist, player_toggle_lyric, player_set_play } from '../actions/player';\nimport { fetch_song_url } from '../actions';\n\nconst styles = theme => ({\n  root: {\n    zIndex: theme.zIndex.drawer + 1,\n    top: 'auto',\n    bottom: 0,\n    backgroundColor: greyColor[200],\n    flexGrow: 1\n  },\n  progressRoot: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: -12\n  },\n  toolbar: {\n    position: 'relative'\n  },\n  textBtn: {\n    width: 48,\n    height: 48\n  }\n});\n\nconst mapStateToProps = state => ({\n ...state\n})\n\nconst mapDispatchToProps = dispatch => ({\n  set_audio: (audio) => dispatch(set_audio(audio)),\n  player_set_current_time: (current_time) => dispatch(player_set_current_time(current_time)),\n  player_get_playmode: () => dispatch(player_get_playmode()),\n  player_set_track: (track, paused) => dispatch(player_set_track(track, paused)),\n  player_set_play: (paused) => dispatch(player_set_play(paused)),\n  player_toggle_playlist: (toggle) => dispatch(player_toggle_playlist(toggle)),\n  player_toggle_lyric: (toggle) => dispatch(player_toggle_lyric(toggle)),\n  fetch_song_url: (params) => dispatch(fetch_song_url(params)),\n})\n\nfunction ValueLabelComponent(props) {\n  const { children, open, value } = props;\n  const popperRef = React.useRef(null);\n  React.useEffect(() => {\n    if (popperRef.current) {\n      popperRef.current.update();\n    }\n  });\n\n  return (\n    <Tooltip\n      PopperProps={{\n        popperRef,\n      }}\n      open={open}\n      enterTouchDelay={0}\n      placement=\"top\"\n      title={<Moment format=\"mm:ss\">{value*1000}</Moment>}\n    >\n      {children}\n    </Tooltip>\n  );\n}\n\nclass Player extends React.Component {\n\n\n  state = {\n    duration: 0,\n    currentTime: 0,\n  }\n\n\n\n  componentDidMount() {\n    this.audioPlayer.addEventListener(\"timeupdate\", this.onTimeUpdate);\n    this.audioPlayer.addEventListener(\"ended\", this.onEnded);\n    this.props.set_audio(this.audioPlayer);\n  }\n\n  onTimeUpdate = (evt) => {\n    this.props.player_set_current_time(evt.target.currentTime);\n  }\n\n  onEnded = (evt) => {\n    const { player, fetch_song_url } = this.props;\n    let track;\n    if(player.playmode === 0) {\n      track  = player.available_playlist[player.available_playlist.indexOf(player.track)+1];\n    } else if(player.playmode === 1) {\n      track  = player.track;\n    } else if(player.playmode === 2) {\n      track = player.available_playlist[Math.floor(Math.random()*player.available_playlist.length)]\n    }\n    fetch_song_url({id: track.id});\n\n  }\n\n  handleSliderChange = (event, newValue) => {\n    this.audioPlayer.pause();\n    this.props.player_set_current_time(newValue);\n  }\n\n  onChangeCommitted = (event, newValue) => {\n    this.props.player_set_current_time(newValue);\n    this.audioPlayer.currentTime = newValue;\n    this.audioPlayer.play()\n\n  }\n\n  handleVolumeChange = (event, newValue) => {\n    this.audioPlayer.volume = newValue;\n  }\n\n  handlerPlaylist = (event) => {\n    this.props.player_toggle_playlist(!this.props.player.open_playlist);\n    if(this.props.player.open_lyric) {\n      this.props.player_toggle_lyric(false);\n    }\n\n  }\n\n  handlerLyric = (event) => {\n    this.props.player_toggle_lyric(!this.props.player.open_lyric);\n    if(this.props.player.open_playlist) {\n      this.props.player_toggle_playlist(false);\n    }\n  }\n\n  render() {\n    const { classes, player,playlist, player_set_track, player_get_playmode, player_toggle_playlist, player_toggle_lyric, fetch_song_url, player_set_play } = this.props;\n\n    return (<React.Fragment>\n        <AppBar position=\"fixed\" className={classes.root} component=\"footer\">\n          <Toolbar disableGutters={true} className={classes.toolbar}>\n            <audio ref={ref => this.audioPlayer = ref} />\n            <div className={classes.progressRoot}>\n              <Slider min={0} max={player.duration} value={player.current_time || 0} step={0.000000001}  valueLabelDisplay=\"on\" ValueLabelComponent={ValueLabelComponent} onChange={this.handleSliderChange} onChangeCommitted={this.onChangeCommitted}/>\n            </div>\n            <Grid container>\n              <Grid item xs={3} container justify=\"flex-start\" alignItems=\"center\" zeroMinWidth>\n              { player.track && <TrackInfo player={player} /> }\n              </Grid>\n              <Grid item xs={6} container justify=\"center\" alignItems=\"center\">\n                <Grid item>\n                  <Control player={player} player_set_play={player_set_play} fetch_song_url={fetch_song_url}/>\n                </Grid>\n              </Grid>\n              <Grid item xs={3} container justify=\"flex-end\" alignItems=\"center\">\n                <Grid item container alignItems=\"center\" spacing={3}>\n                  <Grid item>\n                    <IconButton><VolumeUpIcon /></IconButton>\n                  </Grid>\n                  <Grid item xs>\n                    <Slider step={0.01} min={0} max={1} defaultValue={1} onChange={this.handleVolumeChange} onChangeCommitted={this.onVolumeChangeCommitted}/>\n                  </Grid>\n                  <Grid item>\n                    <div style={{margin: 8}}>\n                    <IconButton onClick={ () => player_get_playmode() }>\n                      {player.playmode === 0 && <RepeatIcon /> }\n                      {player.playmode === 1 && <RepeatOneIcon /> }\n                      {player.playmode === 2 && <ShuffleIcon /> }\n                    </IconButton>\n                    <IconButton onClick={this.handlerPlaylist}>\n                      <QueueMusicIcon { ...(player.open_playlist && {color: 'secondary'}) }/>\n                    </IconButton>\n                    <IconButton onClick={this.handlerLyric} className={classes.textBtn}>\n                      <Typography { ...(player.open_lyric && {color: 'secondary'}) } variant=\"button\">词</Typography>\n                    </IconButton>\n                    </div>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        <Playlist player={player} player_set_track={player_set_track} player_set_play={player_set_play} player_toggle_playlist={player_toggle_playlist} fetch_song_url={fetch_song_url}/>\n        <LyricPanel player={player} playlist={playlist} player_toggle_lyric={player_toggle_lyric} />\n      </React.Fragment>)\n  }\n}\n\nconst StyledPlayer = withStyles(styles)(Player);\nexport default connect(mapStateToProps, mapDispatchToProps)(StyledPlayer)\n","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport AlbumIcon from '@material-ui/icons/Album';\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\nimport GraphicEqIcon from '@material-ui/icons/GraphicEq';\nimport FiberNewIcon from '@material-ui/icons/FiberNew';\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper\n  },\n  iconSize: {\n    fontSize: 36\n  },\n  justifyContent: {\n    justifyContent: 'center'\n  },\n  itemIcon: {\n    paddingLeft: theme.spacing(1)+4\n  },\n  itemText: {\n    marginLeft: theme.spacing(3)    \n  },\n  listItem: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  itemTextSmall: {\n    fontSize: 12\n  }\n});\n\n//Icons\nconst data = [\n  {\n    text: '推薦',\n    icon: AlbumIcon,\n    path: '/',\n  },\n  {\n    text: '歌單',\n    icon: MusicNoteIcon,\n    path: '/',\n  },\n  {\n    text: '排行榜',\n    icon: QueueMusicIcon,\n    path: '/toplist',\n  },\n  {\n    text: '歌手',\n    icon: PersonOutlineIcon,\n    path: '/artists',\n  },\n  {\n    text: '主播電台',\n    icon: GraphicEqIcon,\n    path: '/',\n  },\n  {\n    text: '最新音樂',\n    icon: FiberNewIcon,\n    path: '/search',\n  }\n]\n\n/**\n * @class Nav\n * @extends {Component}\n */\nconst Nav = ({ classes, ui, toggle_drawer } ) => {\n  return (\n    <div className={classes.root}>\n      <List component=\"nav\">       \n        {\n          data.map( (v, i) => {\n            return (\n              <ListItem to={v.path} component={Link} button key={i} className={clsx({[classes.listItem]: !ui.drawer.isOpen})}>\n                <ListItemIcon className={clsx({[classes.itemIcon]: ui.drawer.isOpen, [classes.justifyContent]: !ui.drawer.isOpen})}>\n                  <v.icon className={classes.iconSize}/>                  \n                </ListItemIcon>\n                <ListItemText primary={<Typography variant={ui.drawer.isOpen ? \"body1\" : \"body2\"}>{v.text}</Typography>} className={clsx({[classes.itemText]: ui.drawer.isOpen})}/>\n              </ListItem>\n            )\n          })\n        }\n      </List>\n    </div>\n  );\n}\nconst StyledNav = withStyles(styles)(Nav);\nexport default (StyledNav)","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\n\n\nconst styles = theme => ({\n  root: {\n    zIndex: theme.zIndex.drawer + 1,\n    top: 0,\n    flexGrow: 1,\n    '-webkit-user-select': 'none!important',\n    '-webkit-app-region': 'drag!important'\n  },\n  menu: {\n    // width: 216\n  },\n  menuButton: {\n    marginLeft: theme.spacing(1)-10,\n    marginRight: theme.spacing(3)\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  actions: {\n    marginLeft: theme.spacing(1)\n  },\n  search: {\n    color: '#fff'\n  },  \n  textField: {\n    padding: 0\n  },\n  input: {\n    color: '#fff'\n  },\n  inputInput: {\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n  navigate: {\n    flexGrow: 1,\n    marginLeft: 50\n  }\n\n});\n\nconst TopBar = ({ classes, ui, toggle_drawer, toggle_search_panel, fetch_search_hot, fetch_search_suggest,history } ) => {  \n  const { remote } = window; \n  return (\n    <AppBar position=\"fixed\" className={classes.root}>\n      <Toolbar>\n          <div className={classes.menu}>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"Open drawer\"\n            // onClick={ () => toggle_drawer(!ui.drawer.isOpen) }            \n            onClick={ () => remote.getCurrentWindow().minimize() }            \n          >\n            <MenuIcon />\n          </IconButton>\n          </div>\n          <div className={classes.navigate}>\n            <IconButton color=\"inherit\" onClick={ () => history.goBack() }>\n              <NavigateBeforeIcon />\n            </IconButton>\n            <IconButton color=\"inherit\" onClick={ () => history.goForward() }>\n              <NavigateNextIcon />\n            </IconButton>\n            </div>\n          <TextField\n            variant=\"outlined\"\n            className={classes.textField}\n            type=\"search\"\n            placeholder=\"搜索\"           \n            InputProps={{\n              className: classes.input,\n              classes: {\n                input: classes.inputInput\n              },\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n            onFocus={(evt) => {\n              var target = evt.target\n              setTimeout( ()=> {\n                let type = 'hot';\n                if(target.value.trim() === '') {\n                  fetch_search_hot();\n                } else {\n                  type = 'suggest';\n                  fetch_search_suggest({ keywords: target.value.trim()})  \n                }\n                toggle_search_panel(true, type)                   \n              }, 500)\n            }}            \n            onChange={(evt) => { \n              let type = 'hot';\n              if(evt.target.value.trim() === '') {\n                fetch_search_hot();\n              } else {\n                type = 'suggest';\n                fetch_search_suggest({ keywords: evt.target.value.trim()})  \n              }\n              toggle_search_panel(true, type)              \n            }}\n          />          \n      </Toolbar>\n    </AppBar>\n  );\n}\nconst StyledTopBar = withStyles(styles)(TopBar);\nexport default (StyledTopBar)","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Chip from '@material-ui/core/Chip';\n\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\nimport AlbumIcon from '@material-ui/icons/Album';\nimport MusicVideoIcon from '@material-ui/icons/MusicVideo';\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\n\nimport Progress from './Progress';\n\nconst styles = theme => ({\n  root: {\n    position: 'fixed',\n    right: 0,\n    top: 64,\n    bottom: 64,\n    boxShadow: theme.shadows[10],\n    backgroundColor: theme.palette.background.paper,\n    zIndex: theme.zIndex.drawer - 1,\n    width: 360,   \n    \n    overflow: 'auto'\n  },\n  hot_section: {\n    margin: theme.spacing(2),\n  },\n  chip: {\n    marginRight: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  iconRoot: {\n    // minWidth: 0\n  },\n  greyText: {\n    color: theme.palette.grey[500]\n  }\n});\n\nconst sections = {\n  songs: {\n    text: '单曲',\n    icon: <AudiotrackIcon />\n  },\n  artists: {\n    text: '歌手',\n    icon: <PermIdentityIcon />\n  },\n  albums: {\n    text: '专辑',\n    icon: <AlbumIcon />\n  },\n  mvs: {\n    text: '视频',\n    icon: <MusicVideoIcon />\n  },\n  playlists: {\n    text: '歌单',\n    icon: <QueueMusicIcon />\n  }\n}\n\nconst SearchPanel = ({ classes, playlist, ui }) => {\n  return (\n  \t<div className={classes.root}>                 \n      {ui.search_panel.type===\"hot\" && <div className={classes.hot_section}>\n        <Typography variant=\"body2\" gutterBottom>热门搜索</Typography>\n        {playlist.search_hots.loading && <Progress />}\n        {\n          playlist.search_hots.payload.result && playlist.search_hots.payload.result.hots.map((hot,i)=>{\n            return <Chip key={i} variant=\"outlined\" label={hot.first} className={classes.chip} />\n          })\n        }\n        </div>\n      }\n      {ui.search_panel.type===\"suggest\" && <React.Fragment>\n        {playlist.search_suggest.loading && <Progress />}\n        <List subheader={<li />}>      \n          {playlist.search_suggest.payload.result && playlist.search_suggest.payload.result.order.map( (order, index) => (      \n            <React.Fragment>\n            <ListItem key={`section-${index}`}>\n              <ListItemIcon classes={{\n                \"root\": classes.iconRoot\n              }}>\n                {sections[order].icon}\n              </ListItemIcon>\n              <ListItemText primary={<Typography variant=\"subtitle1\" className={classes.greyText}>{sections[order].text}</Typography>} />          \n            </ListItem>\n            {playlist.search_suggest.payload.result[order].map( (item, itemIndex) => (\n              <ListItem button key={`item-${itemIndex}`}>\n                <ListItemText inset primary={<Typography variant=\"subtitle2\" noWrap>{item.name}</Typography>} />\n              </ListItem>\n            ))}  \n            </React.Fragment>    \n          ))}\n        </List>      \n      </React.Fragment>}\n    </div>\n  )\n}\n\nexport default withStyles(styles)(SearchPanel);","import React from 'react';\nimport { connect } from 'react-redux';\n//Route\nimport { Route, Switch } from 'react-router';\nimport { ConnectedRouter } from 'connected-react-router';\n//UI\nimport clsx from 'clsx';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Drawer from '@material-ui/core/Drawer';\nimport { withStyles } from '@material-ui/core/styles';\n\n\n//Containers & Components\nimport Playlist from './Playlist';\nimport PlaylistDetail from './PlaylistDetail';\nimport Search from './Search';\nimport Toplist from './Toplist';\nimport TopArtist from './TopArtist';\nimport Artist from './Artist';\nimport Album from './Album';\nimport Player from './Player';\nimport Nav from '../components/Nav';\nimport TopBar from '../components/TopBar';\nimport SearchPanel from '../components/SearchPanel';\n\n\n\n//Actions\nimport { toggle_drawer, toggle_search_panel, fetch_search_hot, fetch_search_suggest } from '../actions';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    width: theme.drawer.width,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\"\n  },\n  drawerPaper: {\n    width: theme.drawer.width,\n  },\n  drawerOpen: {    \n    width: theme.drawer.width,\n  },\n  drawerClose: {    \n    overflowX: \"hidden\",    \n    width: theme.spacing(11) + 5\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  toolbar: theme.mixins.toolbar,  \n});\n\nconst mapStateToProps = state => ({\n ...state\n})\n\nconst mapDispatchToProps = dispatch => ({\n  toggle_drawer: (toggle) => dispatch(toggle_drawer(toggle)),\n  toggle_search_panel: (toggle, type) => dispatch(toggle_search_panel(toggle, type)),\n  fetch_search_hot: () => dispatch(fetch_search_hot()),\n  fetch_search_suggest: (params) => dispatch(fetch_search_suggest(params)),\n})\n\n/**\n * @class App\n * @extends {Component}\n */\nclass App extends React.Component {\n\n  render() {\n    const { history, classes, ui, toggle_drawer, toggle_search_panel, fetch_search_hot, fetch_search_suggest, playlist } = this.props;      \n    return (\n      <ConnectedRouter history={history}>\n      <div className={classes.root}>\n        <CssBaseline />\n        <TopBar ui={ui} history={history} toggle_drawer={toggle_drawer} toggle_search_panel={toggle_search_panel} fetch_search_hot={fetch_search_hot} fetch_search_suggest={fetch_search_suggest} />        \n        <Drawer\n          variant=\"permanent\"\n          className={clsx({\n            [classes.drawerOpen]: ui.drawer.isOpen,\n            [classes.drawerClose]: !ui.drawer.isOpen\n          })}\n          classes={{\n            paper: clsx({\n              [classes.drawerOpen]: ui.drawer.isOpen,\n              [classes.drawerClose]: !ui.drawer.isOpen\n            })\n          }}\n          open={ui.drawer.isOpen}\n        >\n          <div className={classes.toolbar} />\n          <Nav toggle_drawer={toggle_drawer} ui={ui} />\n          <div className={classes.toolbar} />\n        </Drawer>\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Switch>\n            <Route exact path=\"/index.html\" component={Playlist} />\n            <Route exact path=\"/\" component={Playlist} />\n            <Route path=\"/toplist\" component={Toplist} />\n            <Route path=\"/playlist/:id\" component={PlaylistDetail} />\n            <Route path=\"/search\" component={Search} />\n            <Route path=\"/artists/:id\" component={Artist} />\n            <Route path=\"/artists\" component={TopArtist} />\n            <Route path=\"/album/:id\" component={Album} />\n          </Switch>\n          <div className={classes.toolbar} />\n        </main>        \n        <Player />\n        { ui.search_panel.isOpen && <ClickAwayListener onClickAway={ () => toggle_search_panel(false) }><div><SearchPanel ui={ui} playlist={playlist} toggle_search_panel={toggle_search_panel} /></div></ClickAwayListener> }\n      </div>\n      </ConnectedRouter>\n    );\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(App));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux';\nimport configureStore, { history } from './store';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\n// Styles\nconst muiTheme = createMuiTheme({\n  appBar: {\n    background: 'rgba(179, 179, 179, 0.95)'\n  },\n  drawer: {\n    width: 240\n  },\n  linkText: {\n    color: 'rgba(0, 0, 0, 0.87)',\n    textDecoration:'none'\n  }\n});\n\nrender(\n    <Provider store={configureStore}>\n        <MuiThemeProvider theme={muiTheme}>          \n          <App history={history}/>                      \n        </MuiThemeProvider>\n    </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}